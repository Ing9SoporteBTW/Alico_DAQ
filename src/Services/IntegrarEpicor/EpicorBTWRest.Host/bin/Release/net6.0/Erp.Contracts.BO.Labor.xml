<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Erp.Contracts.BO.Labor</name>
    </assembly>
    <members>
        <member name="T:Erp.BO.LaborDataSet">
             <summary>
            Represents a strongly typed in-memory cache of data.
            </summary>
        </member>
        <member name="T:Erp.BO.LaborDataSet.LaborHedDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Erp.BO.LaborDataSet.LaborDtlDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Erp.BO.LaborDataSet.LaborDtlAttchDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Erp.BO.LaborDataSet.LaborDtlCommentDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Erp.BO.LaborDataSet.LaborEquipDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Erp.BO.LaborDataSet.LaborPartDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Erp.BO.LaborDataSet.LbrScrapSerialNumbersDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Erp.BO.LaborDataSet.LaborDtlGroupDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Erp.BO.LaborDataSet.SelectedSerialNumbersDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Erp.BO.LaborDataSet.SNFormatDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Erp.BO.LaborDataSet.TimeWeeklyViewDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Erp.BO.LaborDataSet.TimeWorkHoursDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Erp.BO.LaborDataSet.LaborHedRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Erp.BO.LaborDataSet.LaborDtlRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Erp.BO.LaborDataSet.LaborDtlAttchRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Erp.BO.LaborDataSet.LaborDtlCommentRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Erp.BO.LaborDataSet.LaborEquipRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Erp.BO.LaborDataSet.LaborPartRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Erp.BO.LaborDataSet.LbrScrapSerialNumbersRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Erp.BO.LaborDataSet.LaborDtlGroupRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Erp.BO.LaborDataSet.SelectedSerialNumbersRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Erp.BO.LaborDataSet.SNFormatRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Erp.BO.LaborDataSet.TimeWeeklyViewRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Erp.BO.LaborDataSet.TimeWorkHoursRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Erp.BO.LaborDataSet.LaborHedRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Erp.BO.LaborDataSet.LaborDtlRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Erp.BO.LaborDataSet.LaborDtlAttchRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Erp.BO.LaborDataSet.LaborDtlCommentRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Erp.BO.LaborDataSet.LaborEquipRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Erp.BO.LaborDataSet.LaborPartRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Erp.BO.LaborDataSet.LbrScrapSerialNumbersRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Erp.BO.LaborDataSet.LaborDtlGroupRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Erp.BO.LaborDataSet.SelectedSerialNumbersRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Erp.BO.LaborDataSet.SNFormatRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Erp.BO.LaborDataSet.TimeWeeklyViewRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Erp.BO.LaborDataSet.TimeWorkHoursRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Erp.BO.HCMLaborDtlDataSet">
             <summary>
            Represents a strongly typed in-memory cache of data.
            </summary>
        </member>
        <member name="T:Erp.BO.HCMLaborDtlDataSet.HCMLaborDtlDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Erp.BO.HCMLaborDtlDataSet.HCMLaborDtlSyncDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Erp.BO.HCMLaborDtlDataSet.HCMLaborDtlRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Erp.BO.HCMLaborDtlDataSet.HCMLaborDtlSyncRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Erp.BO.HCMLaborDtlDataSet.HCMLaborDtlRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Erp.BO.HCMLaborDtlDataSet.HCMLaborDtlSyncRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Erp.BO.LaborHedListDataSet">
             <summary>
            Represents a strongly typed in-memory cache of data.
            </summary>
        </member>
        <member name="T:Erp.BO.LaborHedListDataSet.LaborHedListDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Erp.BO.LaborHedListDataSet.LaborHedListRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Erp.BO.LaborHedListDataSet.LaborHedListRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Erp.BO.SelectSerialNumbersParamsDataSet">
             <summary>
            Represents a strongly typed in-memory cache of data.
            </summary>
        </member>
        <member name="T:Erp.BO.SelectSerialNumbersParamsDataSet.SelectSerialNumbersParamsDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Erp.BO.SelectSerialNumbersParamsDataSet.SelectSerialNumbersParamsRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Erp.BO.SelectSerialNumbersParamsDataSet.SelectSerialNumbersParamsRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtLaborDataSet">
             <summary>
            Represents a strongly typed in-memory cache of data.
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtLaborDataSet.LaborHedDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtLaborDataSet.LaborDtlDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtLaborDataSet.LaborDtlAttchDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtLaborDataSet.LaborDtlCommentDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtLaborDataSet.LaborEquipDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtLaborDataSet.LaborPartDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtLaborDataSet.LbrScrapSerialNumbersDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtLaborDataSet.LaborDtlGroupDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtLaborDataSet.SelectedSerialNumbersDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtLaborDataSet.SNFormatDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtLaborDataSet.TimeWeeklyViewDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtLaborDataSet.TimeWorkHoursDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtLaborDataSet.LaborHedRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtLaborDataSet.LaborDtlRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtLaborDataSet.LaborDtlAttchRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtLaborDataSet.LaborDtlCommentRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtLaborDataSet.LaborEquipRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtLaborDataSet.LaborPartRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtLaborDataSet.LbrScrapSerialNumbersRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtLaborDataSet.LaborDtlGroupRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtLaborDataSet.SelectedSerialNumbersRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtLaborDataSet.SNFormatRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtLaborDataSet.TimeWeeklyViewRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtLaborDataSet.TimeWorkHoursRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtLaborDataSet.LaborHedRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtLaborDataSet.LaborDtlRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtLaborDataSet.LaborDtlAttchRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtLaborDataSet.LaborDtlCommentRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtLaborDataSet.LaborEquipRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtLaborDataSet.LaborPartRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtLaborDataSet.LbrScrapSerialNumbersRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtLaborDataSet.LaborDtlGroupRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtLaborDataSet.SelectedSerialNumbersRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtLaborDataSet.SNFormatRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtLaborDataSet.TimeWeeklyViewRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Erp.BO.UpdExtLaborDataSet.TimeWorkHoursRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Erp.BO.WorkQueueDataSet">
             <summary>
            Represents a strongly typed in-memory cache of data.
            </summary>
        </member>
        <member name="T:Erp.BO.WorkQueueDataSet.WorkQueueDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Erp.BO.WorkQueueDataSet.PartWipOpDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:Erp.BO.WorkQueueDataSet.WorkQueueRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Erp.BO.WorkQueueDataSet.PartWipOpRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:Erp.BO.WorkQueueDataSet.WorkQueueRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Erp.BO.WorkQueueDataSet.PartWipOpRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:Erp.Contracts.LaborSvcContract">
            <summary>
            Labor Entry Business Object
            </summary>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.BuildJobOperPrjRoleList(System.String,System.Int32,System.Int32,System.String,System.String@)">
            <summary>
            This proc will return the whereclause for the role code combo
            Customers
            </summary>
            <param name="ipJobNum">JobNum</param>
            <param name="ipAssemblySeq">AssemblySeq</param>
            <param name="ipOprSeq">OprSeq</param>
            <param name="ipEmpID">EmpID</param>
            <param name="whereClause">Where Clause to use for role code combo</param>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.ChangeEquipID(System.String,Erp.Tablesets.LaborTableset@)">
            <summary>
            This method should call when EquipID is changed
            </summary>
            <param name= "equipID"> equipID </param>
            <param name="ds">Labor Entry Data set</param>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.ChangeIndirectCode(Erp.Tablesets.LaborTableset@)">
            <summary>
            This method clears the JobNumber and Quantity fields when the LaborType changes to Indirect
            leaves the values as is if changed between Production and Setup
            </summary>
            <param name="ds">Labor Entry Data set</param>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.ChangeLaborType(Erp.Tablesets.LaborTableset@)">
            <summary>
            This method clears the JobNumber and Quantity fields when the LaborType changes to Indirect
            leaves the values as is if changed between Production and Setup
            </summary>
            <param name="ds">Labor Entry Data set</param>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.CheckResourceId(System.String,System.String,System.String@)">
            <summary>
            Main logic from ChangeResourceId to validate the resource id assigned to a Job.
            This method does not depend on a tableset or LaborDtl record.
            </summary>
            <param name="resourceGrpId">Resource Group of the Job</param>
            <param name="proposedResId">Proposed Resource ID to assign.</param>
            <param name="pcMsg">Warning message to be shown to the user.</param>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.ChangeResourceId(Erp.Tablesets.LaborTableset@,System.String,System.String@)">
            <summary>
            For use with MES (ShopFloor) only.
            This method checks the Resource Group of the proposed Resource, and if it
            is different than the current Resource Group, provides a warning question
            suitable for presenting to the user.
            The UI code should place the user's answer to the question in the
            ttLaborDtl.OkToChangeResourceGrpID.
            This method should be called prior to calling the DefaultResourceID method.
            </summary>
            <param name="ds">Labor Entry Data set</param>
            <param name="pcResourceID">The ID of the machine that was used to do the work.</param>
            <param name="pcMsg">The message sent as output for the user</param>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.CheckEmployeeActivity(System.String,System.Int32,System.String,System.Int32,System.Int32,System.String,System.String@)">
            <summary>
            This method checks if the current employee is already working on a Job/Asm/Opr/Resource combination
            If he/she is already working on it, the opMessage will be populated with an error message
            </summary>
            <param name="ipEmpID">The current Employee ID</param>
            <param name="ipLaborHedSeq">LaborHed Sequence</param>
            <param name="ipJobNum">Job Number</param>
            <param name="ipAsmSeq">Assembly Sequence</param>
            <param name="ipOprSeq">Operation Sequence</param>
            <param name="ipResourceID">Resource ID</param>
            <param name="opMessage">Error Message</param>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.CheckNonConformance(System.String,System.Int32,System.Int32,System.String@)">
            <summary>
            Check if there are NonConformance records, if they exists it will ask the user for his approval to delete them
            </summary>
            <param name="jobNum">JobNumber</param>
            <param name="laborHedSeq">LaborHedSeq </param>
            <param name="laborDtlSeq">LaborDtlSeq </param>
            <param name="pcMsg">The message sent as output for the user</param>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.CheckFirstArticleWarning(Erp.Tablesets.LaborTableset@,System.String@)">
            <summary>
            Performs all First Article Validations
            </summary>
            <param name="ds">The Labor data set </param>
            <param name="pcMsg">The message sent as output for the user</param>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.CheckInspResults(System.String,System.Int32,System.Int32,System.Boolean@)">
            <summary>
            This method validates if InspResults has been entered when the Inspection Data is allowed for the current OprSeq.
            </summary>
            <param name="ipJobNum">Current Job</param>
            <param name="ipAssemblySeq"> Current AssembleSeq </param>
            <param name="ipOprSeq"> Current OprSeq</param>
            <param name="inspectionOK">Returns true if InspResults records are found</param>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.CheckResourceGroup(Erp.Tablesets.LaborTableset@,System.String,System.String@)">
            <summary>
            This method checks to see if the new resource is in the current resource group.
            This needs to be run right before the DefaultResourceID.  If the user answers
            okay then the group will be changed in the DefaultResourceID method.
            </summary>
            <param name="ds">Labor Entry Data set</param>
            <param name="ProposedResourceID">Proposed Resource ID</param>
            <param name="vMessage">List of error warnings for user</param>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.CheckWarnings(Erp.Tablesets.LaborTableset@,System.String@)">
            <summary>
            This method runs the labor warning routine and returns any warnings the user needs
            to be aware of.  This needs to be run right before the update method.  If the user answers
            okay to all of the questions, then the update method can be run.  Otherwise the labor record
            needs to be corrected
            </summary>
            <param name="ds">Labor Entry Data set</param>
            <param name="vMessage">List of error warnings for user</param>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.chkReportQtyShopWarn(System.String,System.String,System.Int32,System.Int32,System.String,System.Boolean,System.String@)">
            <summary>
            Purpose:
            Parameters:
            string company   : Company ID in ReportQty record
            string jobNum    : Job Number in ReportQty record
            int assemblySeq  : Assembly Sequence Number in ReportQty record
            int oprSeq       : Operation Sequence Number in ReportQty record
            string empID     : Employee ID in ReportQty record
            bool activeTrans : Active Transaction FLAG in ReportQty record
            out string pcMsg : returns WARNING messages
            Notes:       sets a ttLaborDtl record based on parameters.
            </summary>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.CopyLaborDetail(Erp.Tablesets.LaborTableset@,System.String@)">
            <summary>
            Method to copy the vales from one Labor record to a new Labor record.
            </summary>
            <param name="ds">The Labor data set </param>
            <param name="cMessageText">Message text to present to the user after the process is finished </param>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.CopyTimeWeeklyView(Erp.Tablesets.LaborTableset@,System.String@)">
            <summary>
            Method to copy the vales from one Weekly Time record to a new Weekly Time record.
            </summary>
            <param name="ds">The Labor data set </param>
            <param name="cMessageText">Message text to present to the user after the process is finished </param>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.DefaultAssemblySeq(Erp.Tablesets.LaborTableset@,System.Int32)">
            <summary>
            This method sets dataset fields when the AssemblySeq field changes
            </summary>
            <param name="ds">Labor Entry Data set</param>
            <param name="assemblySeq">Proposed AssemblySeq change </param>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.DefaultComplete(Erp.Tablesets.LaborTableset@,System.Boolean,System.String@)">
            <summary>
            This method updates the dataset after complete flag is set
            </summary>
            <param name="ds">Labor Entry Data set</param>
            <param name="cmplete">Proposed change to the Complete field </param>
            <param name="vMessage">Returns a string of warnings user needs to know</param>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.DefaultDate(Erp.Tablesets.LaborTableset@,System.Nullable{System.DateTime})">
            <summary>
            This method updates the clock in and clock out dates for the LaborHed and LaborDtl
            tables when the payroll date has changed.
            </summary>
            <param name="ds">Labor Entry Data set</param>
            <param name="payrollDate">Proposed Payroll Date change</param>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.DefaultDiscrpRsnCode(Erp.Tablesets.LaborTableset@,System.String)">
            <summary>
            This method defaults fields when the discrepancy reason code field changes.
            Also checks for any warnings the user needs to be aware of
            </summary>
            <param name="ds">Labor Entry Data set</param>
            <param name="ProposedDiscrpRsnCode">Proposed discrepancy reason </param>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.DefaultReworkReasonCode(Erp.Tablesets.LaborTableset@,System.String)">
            <summary>
            This method defaults fields when the discrepancy reason code field changes.
            Also checks for any warnings the user needs to be aware of
            </summary>
            <param name="ds">Labor Entry Data set</param>
            <param name="ProposedReworkReasonCode">Proposed discrepancy reason </param>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.DefaultDtlTime(Erp.Tablesets.LaborTableset@)">
            <summary>
            This method updates the hours when a time field changes
            </summary>
            <param name="ds">Labor Entry Data set</param>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.DefaultIndirect(Erp.Tablesets.LaborTableset@,System.String)">
            <summary>
            This method defaults the expense code when the indirect code has changed
            </summary>
            <param name="ds">Labor Entry Data set</param>
            <param name="indirectCode">Proposed change to the indirect code </param>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.SelectAllForWork(Erp.Tablesets.LaborTableset@,Erp.Tablesets.WorkQueueTable,System.String,System.String,System.String,System.String,System.String@)">
            <summary>
            This method will take the selected rows from the work queue and process them in one server call.
            GetNewLaborDtlOnSelectForWork is called for each work queue row, after that SelectForWork will be called filling required information in all the added LaborDtl rows
            If there is any warning that needs user input the method will finish before calling Update and the prompts will be shown to the user, after the UI will call Update to finish.
            </summary>
            <param name="laborDS">LaborTableSet - Contains only the header.</param>
            <param name="selectedWorkQueueRows">Selected rows from Work Queue / type WorkQueueTable</param>
            <param name="empID">Employee ID which is starting the activities.</param>
            <param name="resourceGrpID">Resource Group ID for all activities.</param>
            <param name="resourceID">Resource used for all activities.</param>
            <param name="laborType">Labor Type, can be 'P' for Production or 'S' for Setup</param>
            <param name="warningsMsg">Contains warning messages that need to be shown to the user before proceeding.</param>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.DefaultJobNum(Erp.Tablesets.LaborTableset@,System.String)">
            <summary>
            This method defaults dataset fields when the JobNum field changes
            </summary>
            <param name="ds">Labor Entry Data set</param>
            <param name="jobNum">Proposed change to the JobNum field </param>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.DefaultLaborHrs(Erp.Tablesets.LaborTableset@,System.Decimal)">
            <summary>
            This method updates the tot hours display field when the labor hours clock in/out
            time changes
            </summary>
            <param name="ds">Labor Entry Data set</param>
            <param name="laborHrs">Proposed Labor Hrs change </param>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.DefaultLaborQty(Erp.Tablesets.LaborTableset@,System.Decimal,System.String@)">
            <summary>
            This method defaults fields when the labor qty fields changes.  Also checks
            for any labor warnings the user needs to be aware of
            </summary>
            <param name="ds">Labor Entry Data set</param>
            <param name="laborQty">Proposed change to LaborQty field </param>
            <param name="vMessage">Returns a string of warnings user needs to know</param>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.VerifyScrapQty(Erp.Tablesets.LaborTableset@,System.Decimal,System.String@)">
            <summary>
            This method defaults fields when the scrap qty field changes.  Also checks
            for any labor warnings the user needs to be aware of
            </summary>
            <param name="ds">Labor Entry Data set</param>
            <param name="scrapQty">Proposed change to ScrapQty field </param>
            <param name="vMessage">Returns a string of warnings user needs to know</param>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.OnChangePartQty(Erp.Tablesets.LaborTableset@,System.Decimal,System.Guid,System.String@)">
            <summary>
            This method sets Complete checkbox when part qty field changes in End Activity.
            </summary>
            <param name="ds">Labor Entry Data set</param>
            <param name="partQty">Proposed change to PartQty field </param>
            <param name="sysRowID">sysRowID of line updated in LaborPart</param>
            <param name="vMessage">Returns a string of warnings user needs to know</param>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.DefaultLaborType(Erp.Tablesets.LaborTableset@,System.String)">
            <summary>
            This method defaults dataset fields when the LaborType field changes.
            </summary>
            <param name="ds">Labor Entry Data set</param>
            <param name="ipLaborType">Proposed LaborType change </param>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.DefaultLunchBreak(Erp.Tablesets.LaborTableset@)">
            <summary>
            This method defaults the Lunch Time fields when the Lunch Break field changes.
            </summary>
            <param name="ds">Labor Entry Data set</param>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.DefaultNextOprSeq(Erp.Tablesets.LaborTableset@,System.Int32)">
            <summary>
            This method updates the dataset after next operation seq is set
            </summary>
            <param name="ds">Labor Entry Data set</param>
            <param name="ProposedNextOprSeq">Proposed next operation sequence </param>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.DefaultOpCode(Erp.Tablesets.LaborTableset@,System.String,System.String@)">
            <summary>
            This method checks for any warnings user needs to know on change of OpCode
            </summary>
            <param name="ds">Labor Entry Data set</param>
            <param name="opCode">Proposed OpCode field change </param>
            <param name="vMessage">Returns list of warnings for user's review</param>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.DefaultOprSeq(Erp.Tablesets.LaborTableset@,System.Int32,System.String@)">
            <summary>
            This method defaults fields when Operation sequence changes.  Also returns any
            warnings user needs to know.
            </summary>
            <param name="oprSeq">Proposed oprSeq change </param>
            <param name="vMessage">Returns warnings for user's review</param>
            <param name="ds">Labor Entry Data set</param>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.GetNewLaborDtlOnSelectForWork(Erp.Tablesets.LaborTableset@,System.Int32,System.String,System.Int32,System.Int32,System.String,System.String,System.Boolean@)">
            <summary>
            Call GetNewLaborDtl base method then assign selected values and default values for MES/Work Queue/Select for Work.
            ResourceID is defaulted the same way than for MES- Start Production Activity. ResourceID must be required only if Company Configuration MachinePrompt is true, otherwhise is optional.
            </summary>
            <param name="ds"></param>
            <param name="laborHedSeq"></param>
            <param name="sJobNum"></param>
            <param name="iAssemblySeq"></param>
            <param name="iOprSeq"></param>
            <param name="sResourceGrpID"></param>
            <param name="setupOrProd"></param>
            <param name="bMachinePrompt"></param>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.DefaultPhaseID(Erp.Tablesets.LaborTableset@,System.String)">
            <summary>
            This method defaults dataset fields when the PhaseID field changes.
            </summary>
            <param name="ds">Labor Entry Data set</param>
            <param name="ipPhaseID">Proposed PhaseID change </param>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.DefaultPhaseOprSeq(Erp.Tablesets.LaborTableset@,System.Int32,System.String@)">
            <summary>
            This method defaults dataset fields when the PhaseOprSeq field changes.
            </summary>
            <param name="ds">Labor Entry Data set</param>
            <param name="ipPhaseOprSeq">Proposed PhaseOprSeq change </param>
            <param name="vMessage">Returns warnings for user's review</param>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.DefaultProjectID(Erp.Tablesets.LaborTableset@,System.String)">
            <summary>
            This method defaults dataset fields when the ProjectID field changes.
            </summary>
            <param name="ds">Labor Entry Data set</param>
            <param name="ipProjectID">Proposed ProjectID change </param>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.DefaultResourceID(Erp.Tablesets.LaborTableset@,System.String)">
            <summary>
            This method updates dataset fields when the ResourceID field changes.
            </summary>
            <param name="ds">The Labor data set </param>
            <param name="ProposedResourceID">The proposed resource id</param>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.DefaultRoleCd(Erp.Tablesets.LaborTableset@,System.String)">
            <summary>
            This method defaults dataset fields when the RoleCd field changes.
            </summary>
            <param name="ds">Labor Entry Data set</param>
            <param name="ipRoleCd">Proposed RoleCd change </param>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.DefaultScrapReasonCode(Erp.Tablesets.LaborTableset@,System.String,System.String@)">
            <summary>
            This method defaults fields when the scrap reason code fields changes.  Also checks
            for any labor warnings the user needs to be aware of
            </summary>
            <param name="ds">Labor Entry Data set</param>
            <param name="ProposedScrapReasonCode">Proposed scrap reason </param>
            <param name="vMessage">Returns a string of warnings user needs to know</param>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.DefaultSetupPctComplete(Erp.Tablesets.LaborTableset@,System.Decimal)">
            <summary>
            This method validates and reassigns the setup percent complete field.
            </summary>
            <param name="ds">Labor Entry Data set</param>
            <param name="PercentComplete">Proposed percent complete </param>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.DefaultShift(Erp.Tablesets.LaborTableset@,System.Int32)">
            <summary>
            This method updates clock in/out and lunch in/out fields after shift field changes
            </summary>
            <param name="ds">Labor Entry Data set</param>
            <param name="shift">Proposed Shift field change </param>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.DefaultTime(Erp.Tablesets.LaborTableset@,System.String,System.Decimal)">
            <summary>
            This method updates time and pay hours when a time field changes
            </summary>
            <param name="ds">Labor Entry Data set</param>
            <param name="cFieldName">name of field being changed</param>
            <param name="timeValue">proposed time change </param>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.DefaultTimeTypCd(Erp.Tablesets.LaborTableset@,System.String,System.String@)">
            <summary>
            This method defaults dataset fields when the TimeTypCd field changes.
            </summary>
            <param name="ds">Labor Entry Data set</param>
            <param name="ipTimeTypCd">Proposed TimeTypCd change </param>
            <param name="vMessage">Returns warnings the user needs to review </param>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.DefaultWCCode(Erp.Tablesets.LaborTableset@,System.String,System.String@)">
            <summary>
            This method updates dataset fields when the ResourceGroup field changes.  Also checks
            for any warning the user needs to know
            </summary>
            <param name="ds">Labor Entry Data set</param>
            <param name="wcCode">Proposed WorkCenter Code change</param>
            <param name="vMessage">Returns any warnings the user needs to review</param>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.DeleteLaborDtl(System.Int32,System.Int32,System.String,System.String@)">
            <summary>
            This method delete records related to HCM PTO.
            </summary>
            <param name="LaborHedSeq">LaborHedSeq</param>
            <param name="LaborDtlSeq">LaborDtlSeq</param>
            <param name="CallFrom">Proposed value to filter logic for HCM</param>
            <param name="vMessage">Error message</param>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.EndActivity(Erp.Tablesets.LaborTableset@)">
            <summary>
            Method to call to end an activity in Shop Floor.  This method will mark
            the EndActivity flag in LaborDtl so when the Update method is run, special
            end activity processing can occur.  It will also default values in other
            fields that apply to the end activity.  Before this method is called, the
            LaborDtl.RowMod value needs to be set to 'U'.
            </summary>
            <param name="ds">The Labor data set </param>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.EndActivityComplete(Erp.Tablesets.LaborTableset@,System.Boolean,System.String@)">
            <summary>
            This method checks for any necessary labor warning when the complete flag is checked in MES End Activity
            </summary>
            <param name="ds">Labor Entry Data set</param>
            <param name="cmplete">Proposed change to the Complete field </param>
            <param name="vMessage">Returns a string of warnings user needs to know</param>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.GetActiveLaborDtl(System.String)">
            <summary>
            Method to retrieve the active Labor Details and header records by employee.
            </summary>
            <param name="employeeNum">The Employee Num </param>
            <returns>The Labor data set </returns>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.InitiateDowntime(System.String,System.String,System.String)">
            <summary>
            Method to Begin Downtime for Kinectic MES
            </summary>
            <param name="employeeNum">Employee Number </param>
            <param name="indirectCode">Indirect Code</param>
            <param name="indirectNote">Indirect Labor Note</param>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.EndDowntime(System.String)">
            <summary>
            Method to End Downtime for Kinectic MES
            </summary>
            <param name="employeeNum">Employee Number </param>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.GetDetail(System.Int32,System.Int32)">
            <summary>
            Method to call to retrieve the Labor dataset with just the header
            and a specific detail record.
            </summary>
            <param name="iLaborHedSeq">The LaborHedSeq of the LaborHed record to retrieve </param>
            <param name="iLaborDtlSeq">The LaborDtlSeq of the LaborDtl record to retrieve </param>
            <returns>The Labor data set </returns>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.getElapsedTime(System.DateTime,System.Decimal)">
            <summary>
            This method gets the elapsed time from a start date-startTime until now
            </summary>
            <param name="startDate">Initial Date</param>
            <param name="startTime">Initial Tme</param>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.GetNewLaborDtlNoHdr(Erp.Tablesets.LaborTableset@,System.String,System.Boolean,System.Nullable{System.DateTime},System.Decimal,System.Nullable{System.DateTime},System.Decimal)">
            <summary>
            This method is called to add a new labor detail without having a
            labor header record available
            </summary>
            <param name="ds">Labor Entry Data set</param>
            <param name="EmployeeNum">The employee id for this labor record</param>
            <param name="ShopFloor">Indicates whether this is being called from the shop floor
            labor entry program</param>
            <param name="ClockInDate">The clock in date</param>
            <param name="ClockInTime">The clock in time</param>
            <param name="ClockOutDate">The clock out date</param>
            <param name="ClockOutTime">The clock out time</param>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.GetNewLaborDtlWithHdr(Erp.Tablesets.LaborTableset@,System.Nullable{System.DateTime},System.Decimal,System.Nullable{System.DateTime},System.Decimal,System.Int32)">
            <summary>
            This method is called to add a new labor detail without having a
            labor header record available
            </summary>
            <param name="ds">Labor Entry Data set</param>
            <param name="ipClockInDate">The clock in date</param>
            <param name="ipClockInTime">The clock in time</param>
            <param name="ipClockOutDate">The clock out date</param>
            <param name="ipClockOutTime">The clock out time</param>
            <param name="ipLaborHedSeq">Unique identifier of the LaborHed</param>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.GetNewLaborHed1(Erp.Tablesets.LaborTableset@,System.String,System.Boolean,System.Nullable{System.DateTime})">
            <summary>
            This method to be used in place of GetNewLaborHed.  This method asks for an
            employee number to default fields based on the employee.
            </summary>
            <param name="ds">Labor Entry Data set</param>
            <param name="EmployeeNum">The employee id for this labor record</param>
            <param name="ShopFloor">Indicates whether this is being called from the shop floor
            labor entry program</param>
            <param name="payrollDate">Payroll Date for this labor record</param>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.GetNewLbrScrapSerialNumbers(Erp.Tablesets.LaborTableset@)">
            <summary>
            Gets a new LbrScrapSerialNumbers record for current LaborDtl
            </summary>
            <param name="ds">Labor data set</param>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.GetNewTimeWeeklyView(Erp.Tablesets.LaborTableset@,System.String,System.Nullable{System.DateTime})">
            <summary>
            Gets a new TimeWeeklyView record for the current week
            </summary>
            <param name="ds">Labor data set</param>
            <param name="ipEmployeeNum">The employee id for this labor record</param>
            <param name="ipDateInWeek">Date within the week for which a new TimeWeeklyView record is to be created</param>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.GetRowsCalendarView(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Boolean@)">
             <summary>
            
             </summary>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.GetRowsWhoIsHere(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.String,System.Boolean@)">
             <summary>
            
             </summary>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.GetTERetrieveApproved(System.Boolean@)">
            <summary>
            Method to get the value UserFile.TERetrieveApproved
            </summary>
            <param name="opTERetrieveApproved">Should Approved records be retrieved on search? Yes/No</param>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.GetTERetrieveByOption(System.Boolean@,System.Boolean@,System.Boolean@)">
            <summary>
            Method to get retrieve by options
            </summary>
            <param name="opTERetrieveByDay">Should records be retrieve one day at a time? Yes/No</param>
            <param name="opTERetrieveByWeek">Should records be retrieve a week at a time? Yes/No</param>
            <param name="opTERetrieveByMonth">Should records be retrieve a month at a time? Yes/No</param>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.GetTERetrieveEntered(System.Boolean@)">
            <summary>
            Method to get the value UserFile.TERetrieveEntered
            </summary>
            <param name="opTERetrieveEntered">Should Entered records be retrieved on search? Yes/No</param>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.GetTERetrievePartiallyApproved(System.Boolean@)">
            <summary>
            Method to get the value UserFile.TERetrievePartiallyApproved
            </summary>
            <param name="opTERetrievePartiallyApproved">Should Partially Approved records be retrieved on search? Yes/No</param>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.GetTERetrieveRejected(System.Boolean@)">
            <summary>
            Method to get the value UserFile.TERetrieveRejected
            </summary>
            <param name="opTERetrieveRejected">Should Rejected records be retrieved on search? Yes/No</param>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.GetTERetrieveSubmitted(System.Boolean@)">
            <summary>
            Method to get the value UserFile.TERetrieveSubmitted
            </summary>
            <param name="opTERetrieveSubmitted">Should Submitted records be retrieved on search? Yes/No</param>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.IsValidAssembly(System.String,System.Int32,System.Boolean@)">
            <summary>
            Validate if an assembly is valid for a job. if not returns false,
            otherwise returns true.
            </summary>
            <param name="pcJobNum">Job number to which this labor transaction applies.</param>
            <param name="piAssemblySeq">The Assembly Sequence of the Job that the labor transaction applies to.</param>
            <param name="plFound">Found YES/NO</param>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.LaborRateCalc(Erp.Tablesets.LaborTableset@)">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.OnChangeClockInDate(Erp.Tablesets.LaborTableset@,System.Nullable{System.DateTime})">
            <summary>
            Call this procedure when LaborDtl.ClockInDate changes
            </summary>
            <param name="ds">Epicor.Mfg.BO.LaborDataSet</param>
            <param name="ipClockInDate">Proposed Clock In Date</param>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.OnChangePCID(System.String,Erp.Tablesets.LaborTableset@)">
            <summary>
            This method validates the PCID
            </summary>
            <param name="pcid">PCID to validate</param>
            <param name="ds">Report Qty Dataset</param>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.OnChangeQuickEntryCode(System.String,System.String,Erp.Tablesets.LaborTableset@)">
            <summary>
            This method validates field QuickEntryCode, and if it is valid, uses the
            values from the QuickEntry record to populate the LaborDtl values.
            </summary>
            <param name="ipEmpID">Proposed EmpID value</param>
            <param name="ipQuickEntryCode">Proposed QuickEntryCode value</param>
            <param name="ds">The Labor data set </param>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.OnChangeResourceGrpID(Erp.Tablesets.LaborTableset@,System.String)">
            <summary>
            Call this procedure when TimeWeeklyView.ResourceGrpID changes
            </summary>
            <param name="ds">Epicor.Mfg.BO.LaborDataSet</param>
            <param name="ipResourceGrpID">Proposed Resource Group</param>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.OnLoadEndActivity(System.Int32,System.Int32)">
            <summary>
            Call this method when loading end activity on Kinetic-MES.
            </summary>
            <param name="iLaborHedSeq">The LaborHedSeq of the LaborHed record to retrieve </param>
            <param name="iLaborDtlSeq">The LaborDtlSeq of the LaborDtl record to retrieve </param>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.Overrides(Erp.Tablesets.LaborTableset@,System.String,System.String)">
            <summary>
            Call this procedure to override the Resource Group and Operation Code in a
            job.
            </summary>
            <param name="ds">Epicor.Mfg.BO.LaborDataSet</param>
            <param name="inOpCode"> OpCode to override </param>
            <param name="inResGrpID"> Resource Group OD to override </param>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.OverridesResource(Erp.Tablesets.LaborTableset@,System.String)">
            <summary>
            Call this procedure to override the Resource in a LaborDtl record
            </summary>
            <param name="ds">The Labor data set </param>
            <param name="ProposedResourceID">The proposed resource id</param>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.RecallFromApproval(Erp.Tablesets.LaborTableset@,System.Boolean,System.String@)">
            <summary>
            Method to recall Labor for Approval.
            </summary>
            <param name="ds">The Labor data set </param>
            <param name="lWeeklyView">Is this method being called with WeeklyView records?</param>
            <param name="cMessageText">Message text to present to the user after the process is finished </param>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.SelectForWork(Erp.Tablesets.LaborTableset@,System.String,System.String,System.String)">
             <summary>
             This method is intended to be used when the MES/ShopFloor user selects an
             operation from the WorkQueue to work on.  Use this method in place of the
             Update method in this situation.
            
             This method expects a LaborDataSet containing a single LaborHed with a
             RowMod indicating a changed row, and a LaborDtl row with a RowMod indicating
             a changed row.  This can be obtained with a call to Labor.GetRows() with a
             whereClauseLaborHed of
             ActiveTrans = YES and EmployeeNum = xxxx
             substituting the desired employeeNum for the xxxx.
             followed by a call to LaborDtlGetNew.
            
             After validating the given Job, Assembly, Operation, ResourceID, ResourceGrpID
             and LaborType, and additional validations are applied, the LaborDtl is updated.
            
             An exception is thrown if:
             - a changed Laborhed row is not found.
             - the given Job, Assembly and Operation is not valid
             - the LaborHed.ActiveTrans = no.  This method is for MES (ShopFloor) use only.
             - the given LaborType is not "S" or "P"
             -
             </summary>
             <param name="ds">Labor Entry Data set</param>
             <param name="pcResourceGrpId">The Resource Group id for this work.</param>
             <param name="pcResourceId">The Resource id for this work.</param>
             <param name="pcLaborType">Labor Type: S=Setup, P=Production</param>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.SelectForWorkCheckWarnings(Erp.Tablesets.LaborTableset@,System.String@)">
            <summary>
            This method runs the shop warning routine and returns any warnings the user needs
            to be aware of.  This needs to be run right before the SelectForWork method.  If the user answers
            okay to all of the questions, then the SelectForWork method can be run.  Otherwise the labor record
            needs to be corrected
            </summary>
            <param name="ds">Labor Entry Data set</param>
            <param name="vMessage">List of error warnings for user</param>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.SetClockInAndDisplayTimeMES(Erp.Tablesets.LaborTableset@)">
            <summary>
            Sets the Time Stamp in which the Employee Starts his/her activity and
            also populates the field that displays the time correctly.
            </summary>
            <param name="ds">The Labor data set</param>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.SetTERetrieveApproved(System.Boolean)">
            <summary>
            Method to set the value UserFile.TERetrieveApproved
            </summary>
            <param name="ipTERetrieveApproved">Value to set UserFile.TERetrieveApproved Yes/No</param>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.SetTERetrieveByDay(System.Boolean)">
            <summary>
            Method to set the value for retrieve by day
            </summary>
            <param name="ipTERetrieveByDay">Value to set the by day option Yes/No</param>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.SetTERetrieveByMonth(System.Boolean)">
            <summary>
            Method to set the value for retrieve by month
            </summary>
            <param name="ipTERetrieveByMonth">Value to set the by month option Yes/No</param>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.SetTERetrieveByWeek(System.Boolean)">
            <summary>
            Method to set the value for retrieve by week
            </summary>
            <param name="ipTERetrieveByWeek">Value to set the by week option Yes/No</param>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.SetTERetrieveEntered(System.Boolean)">
            <summary>
            Method to set the value UserFile.TERetrieveEntered
            </summary>
            <param name="ipTERetrieveEntered">Value to set UserFile.TERetrieveEntered Yes/No</param>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.SetTERetrievePartiallyApproved(System.Boolean)">
            <summary>
            Method to set the value UserFile.TERetrievePartiallyApproved
            </summary>
            <param name="ipTERetrievePartiallyApproved">Value to set UserFile.TERetrievePartiallyApproved Yes/No</param>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.SetTERetrieveRejected(System.Boolean)">
            <summary>
            Method to set the value UserFile.TERetrieveRejected
            </summary>
            <param name="ipTERetrieveRejected">Value to set UserFile.TERetrieveRejected Yes/No</param>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.SetTERetrieveSubmitted(System.Boolean)">
            <summary>
            Method to set the value UserFile.TERetrieveSubmitted
            </summary>
            <param name="ipTERetrieveSubmitted">Value to set UserFile.TERetrieveSubmitted Yes/No</param>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.StartActivity(System.Int32,System.String,Erp.Tablesets.LaborTableset@)">
            <summary>
            Method to call to start an activity in Shop Floor.
            </summary>
            <param name="LaborHedSeq">The labor header sequence </param>
            <param name="StartType">The type of activity being started.
            Values are: P - Production
            I - Indirect
            S - Setup
            R - Rewwork </param>
            <param name="ds">The Labor data set </param>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.SubmitForApproval(Erp.Tablesets.LaborTableset@,System.Boolean,System.String@)">
            <summary>
            Method to submit Labor for Approval.
            </summary>
            <param name="ds">The Labor data set </param>
            <param name="lWeeklyView">Is this method being called with WeeklyView records?</param>
            <param name="cMessageText">Message text to present to the user after the process is finished </param>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.ValidateIndirectCodeIsDowntime(System.String)">
            <summary>
            This method validates the IndirectCode is marked as Downtime
            </summary>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.validateNonConfProcessed(Erp.Tablesets.LaborTableset@,System.Int32,System.Int32,System.Decimal,System.String@)">
            <summary>
            This method validates the Non Conformance value and validates if it has already been processed
            </summary>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.ValidateSerialAfterSelect(Erp.Tablesets.LaborTableset@)">
            <summary>
            Validates after calling SN selection screen
            </summary>
            <param name="ds">Labor data set</param>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.ValidateSerialScanInterface(System.String,System.Int32,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Validates if serial number is valid after selecting SN on scan interface kinetic MES
            </summary>
            <param name="jobNum">JobNum of the SN</param>
            <param name="assemblySeq">AssemblySeq of the SN</param>
            <param name="partNum">PartNum of the SN</param>
            <param name="proposedSN">Proposed SN</param>
            <param name="oprSeq">Operation sequence of the labor detail</param>
            <param name="laborHedSeq">Labor Head sequence of the labor detail</param>
            <param name="laborDtlSeq">Labor Detail sequence of the labor detail</param>
            <param name="rework">Indicates if labor record is rework</param>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.ValidateSerialBeforeSelect(Erp.Tablesets.LaborTableset@,System.String@,System.Decimal@,System.Decimal@)">
            <summary>
            Call before allowing the select of serial numbers
            </summary>
            <param name="ds">Labor data set</param>
            <param name="notEnoughSerials">Not enough serials for labor entry</param>
            <param name="totSNReq">Total number of serials required for labor entry</param>
            <param name="totNewSNReq">Number of new serial numbers needed</param>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.VerifySerialMatch(Erp.Tablesets.LaborTableset@,System.String@,System.Int32@)">
            <summary>
            Verifies if the user should enter child serial numbers for the serial numbers
            being received depending on the setting of the Serial Number Matching before save.
            </summary>
            <param name="ds">Epicor.Mfg.BO.LaborDataSet</param>
            <param name="pcMsg">Set by the BL. It is used to send warining or error messages to the UI.</param>
            <param name="piMsgType">The type of the message being returned. when 1 - it is a warning msg, when 2 - it is an error msg, when 0 - no msg should be displayed.</param>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.GetClockTime(System.String,System.Decimal@)">
            <summary>
            This method is called to update the values of the Display columns
            DspClockInTime and DspClockOutTime
            </summary>
            <param name="dspClckTm">The clock time to be parsed as Decimal</param>
            <param name="clckTm">The clock time formatted sent as output for the user</param>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.GetCodeDescList(System.String,System.String)">
            <summary>
            </summary>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.GetDspClockTime(System.Decimal,System.String@)">
            <summary>
            This method is called to update the values of the Display columns
            DspClockInTime and DspClockOutTime
            </summary>
            <param name="clckTm">The clock time to be formatted</param>
            <param name="dspClckTm">The clock time formatted sent as output for the user</param>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.ReportPartQtyAllowed(System.String,System.Int32,System.Int32)">
            <summary>
            Returns TRUE if Part Quantity Reporting is allowed for a given operation.
            </summary>
            <param name="ip_JobNum">Job number</param>
            <param name="ip_AssemblySeq">Assembly Sequence number</param>
            <param name="ip_OprSeq">Operation Sequence number</param>
            <returns></returns>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.ExternalMESDowntime(Erp.Tablesets.LaborTableset,System.String,System.String)">
            <summary>
            Methods updates Downtime codes
            </summary>
            <param name="ds">The Labor data set </param>
            <param name="indirectCode">IndirectCode </param>
            <param name="downtimeNote">Downtime Note </param>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.ExternalMESEndDowntime(Erp.Tablesets.LaborTableset@)">
            <summary>
            Methods updates Downtime codes
            </summary>
            <param name="ds">The Labor data set </param>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.HCMGetLaborRecords(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String)">
            <summary>
            Description: Public method which retreives the labor information HCM third party requires.
            </summary>
            <param name="employeeNum">String value with the list of employees</param>
            <param name="startDate">Start Date</param>
            <param name="endDate">End Date</param>
            <param name="includeStatus">String value with status value</param>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.HCMSetLaborStatus(Erp.Tablesets.HCMLaborDtlTableset)">
            <summary>
            Description
            </summary>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.ValidateChargeRateForTimeType(Erp.Tablesets.LaborTableset@,System.String@)">
            <summary>
            Validates if there is no valid Charge Rate according to selected Time Type.
            This validation can also be found on BO/LaborApproval.
            </summary>
            <param name="ds">Labor Entry Data set</param>
            <param name="vMessage">Warning message</param>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.ReviewIsDocumentLock(System.String,System.String,System.String@)">
            <summary>
            Review if the document is Lock when user tries to recall the record from UI
            </summary>
            <param name="laborHedSeq">Labor Hed Sequence</param>
            <param name="laborDtlSeq">Labor Detail Sequence</param>
            <param name="vMessage">Error message</param>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.IsHCMEnabledAtCompany">
            <summary>
            Returns true if HCM is enable at company level.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.GetNewLaborHed(Erp.Tablesets.LaborTableset@)">
            <summary>
            Inserts a new row in the DataSet with defaults populated.
            </summary>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.GetNewLaborDtl(Erp.Tablesets.LaborTableset@,System.Int32)">
            <summary>
            Inserts a new row in the DataSet with defaults populated.
            </summary>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.GetNewLaborDtlAttch(Erp.Tablesets.LaborTableset@,System.Int32,System.Int32)">
            <summary>
            Inserts a new row in the DataSet with defaults populated.
            </summary>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.GetNewLaborDtlComment(Erp.Tablesets.LaborTableset@,System.Int32,System.Int32)">
            <summary>
            Inserts a new row in the DataSet with defaults populated.
            </summary>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.GetNewLaborEquip(Erp.Tablesets.LaborTableset@,System.Int32,System.Int32)">
            <summary>
            Inserts a new row in the DataSet with defaults populated.
            </summary>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.GetNewLaborPart(Erp.Tablesets.LaborTableset@,System.Int32,System.Int32)">
            <summary>
            Inserts a new row in the DataSet with defaults populated.
            </summary>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.GetNewLaborDtlGroup(Erp.Tablesets.LaborTableset@,System.String)">
            <summary>
            Inserts a new row in the DataSet with defaults populated.
            </summary>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.DeleteByID(System.Int32)">
            <summary>
            Deletes a row given its ID.
            </summary>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.GetByID(System.Int32)">
            <summary>
            Returns a DataSet given the primary key.
            </summary>
            <returns>The DataSet.</returns>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.GetList(System.String,System.Int32,System.Int32,System.Boolean@)">
            <summary>
            Returns a list of rows that satisfy the where clause.
            </summary>
            <param name="whereClause">An expression used to filter the rows. Can be left blank for all rows.</param>
            <param name="pageSize">The maximum number of rows to return. Leave as zero for no maximum.</param>
            <param name="absolutePage">Page of rows to return.</param>
            <param name="morePages">Whether there are more pages of rows available.</param>
            <returns>The list DataSet.</returns>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.GetRows(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Boolean@)">
            <summary>
            Returns a dataset containing all rows that satisfy the where clauses.
            </summary>
            <returns>The full DataSet.</returns>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.GetBySysRowID(System.Guid)">
            <summary>
            </summary>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.GetBySysRowIDs(System.Collections.Generic.List{System.Guid})">
            <summary>
            </summary>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.Update(Erp.Tablesets.LaborTableset@)">
            <summary>
            Commits the DataSet changes to the data store.
            </summary>
            <param name="ds">The full DataSet.</param>
        </member>
        <member name="M:Erp.Contracts.LaborSvcContract.UpdateExt(Erp.Tablesets.UpdExtLaborTableset@,System.Boolean,System.Boolean,System.Boolean@)">
            <summary>
            Apply input data to BO by calling GetByID/GetNew/Update methods.
            </summary>
            <returns>The dataset with list of errors occurred during update process.</returns>
        </member>
        <member name="P:Erp.Tablesets.HCMLaborDtlRow.Company">
            <summary>
            Company Identifier.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.HCMLaborDtlRow.EmployeeNum">
             <summary>
             The number of the employee that performed the work. This field is duplicated from the LaborHed.EmployeeNum. It is here so that an index can be built and used when finding how many jobs are
            concurrently active for an employee in order to distribute the labor hours.  
             </summary>
        </member>
        <member name="P:Erp.Tablesets.HCMLaborDtlRow.LaborHedSeq">
            <summary>
            Used as the foreign key to the LaborHed record.   
            </summary>
        </member>
        <member name="P:Erp.Tablesets.HCMLaborDtlRow.LaborDtlSeq">
             <summary>
             An integer assigned by the system to uniquely identify the LaborDtl record. This integer is created by using the database sequence "LaborDtlSeq".
            
             </summary>
        </member>
        <member name="P:Erp.Tablesets.HCMLaborDtlRow.LaborTypePseudo">
             <summary>
             Correlates to LaborType.  Indicates the type of labor transaction, however "Production" LaborType can be broken out into "Project", "Production" or "Service".  Valid Values are "I" = Indirect, "P" - Production, "S" - Setup, "J" - Project, or "V" - Service.
            This value controls what fields are displayed/prompted for. 
            "I" Indirect does not use JobNum, LotNum, SetupPctCmp, OprComplete, OpCode, LaborQty, ScrapQty, ScrapReasonCode, Rework, ReworkReasonCode.
            "S" Setup does not use IndirectCode.
            "P" Production does not use IndirectCode or SetupPctCmp,  
             </summary>
        </member>
        <member name="P:Erp.Tablesets.HCMLaborDtlRow.JCDept">
            <summary>
            The Department in which the work was done. Default is from WrkCenter.JCDEpt. This code is DIRECTLY ENTERED.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.HCMLaborDtlRow.LaborNote">
            <summary>
            A short note that the user can make about the labor transaction. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.HCMLaborDtlRow.ClockInDate">
            <summary>
            The clock in date that corresponds to the clock in time field. Labor entry uses the LaborHed.ClockInDate as a default for the first LaborDtl record of the LaborHed and then will use the date from the Last LaborDtl record. Labor Collection creates this field based on an adjusted system date.  See LaborHed.ClockInDate field description on adjusting the date.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.HCMLaborDtlRow.DspClockInTime">
            <summary>
            A "pre-formatted" ClockinTime field  used for displays purposes only.  If JCSyst.ClockFormat = "M" then output the clockin time as Hours:Minutes else output it as Hours.Hundreths. Note that the colon or  period  are physically part of the field.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.HCMLaborDtlRow.DspClockOutTime">
            <summary>
            A "pre-formatted" ClockOutTime field  used for displays purposes only.  If JCSyst.ClockFormat = "M" then output the clockin time as Hours:Minutes else output it as Hours.Hundreths. Note that the colon or  period  are physically part of the field.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.HCMLaborDtlRow.ProjectID">
            <summary>
            Descriptive code assigned by the user to uniquely identify the Jobs, Orders, POs, and Tasks in a Project.  Cannot be blank. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.HCMLaborDtlRow.Shift">
            <summary>
            Indicates the shift in which the employee clocked in.  Default from the Employee master. Must be valid in the master table JCShift.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.HCMLaborDtlRow.SysRowID">
            <summary>
            Unique identifier for this row. The value is a GUID.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.HCMLaborDtlRow.PayHours">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.HCMLaborDtlRow.HCMEnabledAt">
            <summary>
            String value which contains the values for the HCM Integration, HDR (Header) DTL (Detail). Those values help to know the source of the payHours.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.HCMLaborDtlRow.Status">
            <summary>
            Sent (S) = Submitted to HCM  Received (R) = Received from HCM  Error (E) = Error Submitting to HCM In Progress (IP) = In Progress
            </summary>
        </member>
        <member name="P:Erp.Tablesets.HCMLaborDtlRow.RowMod">
            <summary>
            RowMod
            </summary>
        </member>
        <member name="P:Erp.Tablesets.HCMLaborDtlRow.SpecifiedProperties">
            <summary>
            SpecifiedProperties
            </summary>
        </member>
        <member name="P:Erp.Tablesets.HCMLaborDtlSyncRow.Company">
            <summary>
            Company
            </summary>
        </member>
        <member name="P:Erp.Tablesets.HCMLaborDtlSyncRow.LaborDtlSysRowID">
            <summary>
            Field to Link the SysRowID with HCMLaborDtlSync record.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.HCMLaborDtlSyncRow.Status">
            <summary>
            Sent (S) = Submitted to HCM  Received (R) = Received from HCM  Error (E) = Error Submitting to HCM In Progress (IP) = In Progress
            </summary>
        </member>
        <member name="P:Erp.Tablesets.HCMLaborDtlSyncRow.SysRevID">
            <summary>
            SysRevID
            </summary>
        </member>
        <member name="P:Erp.Tablesets.HCMLaborDtlSyncRow.SysRowID">
            <summary>
            SysRowID
            </summary>
        </member>
        <member name="P:Erp.Tablesets.HCMLaborDtlSyncRow.LaborSource">
            <summary>
            String value which indicates if the status should be applied to the header or the detail (HDR/DTL)
            </summary>
        </member>
        <member name="P:Erp.Tablesets.HCMLaborDtlSyncRow.BitFlag">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.HCMLaborDtlSyncRow.RowMod">
            <summary>
            RowMod
            </summary>
        </member>
        <member name="P:Erp.Tablesets.HCMLaborDtlSyncRow.SpecifiedProperties">
            <summary>
            SpecifiedProperties
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedRow.Company">
            <summary>
            Company Identifier.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedRow.EmployeeNum">
            <summary>
            The number of the employee that performed the work. This field is directly maintainable. A selection list is provided in labor entry to find the employee by name.  
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedRow.LaborHedSeq">
             <summary>
             An integer assigned by the system to uniquely identify the LaborHed record. This integer is created by using the database sequence "LaborHedSeq".
            
             </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedRow.PayrollDate">
             <summary>
             The Payroll date is the "Logical Day" that labor occurred. In most cases this is the same as the "Physical Day".  But when work is done before and after midnight then "Labor Collection" rolls the physical date forward or backward to create a Logical date. This date will be used to group transactions together by a logical date in order to calculate daily overtime during the transfer to payroll.
            It will also be used in the selection criteria logic during the transfer to payroll.  This is duplicated into each LaborDtl. 
             </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedRow.Shift">
            <summary>
            Indicates the shift in which the employee clocked in.  Default from the Employee master. Must be valid in the master table JCShift.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedRow.ClockInDate">
            <summary>
            The clock in date of the clock in time field. It is created using the ActualDate and may be rolled forward/backward if the clock in time is adjusted across midnight. For example, when an employee clocks in prior to midnight, but shift starts at midnight or later, this situation causes the default to be ActualDateIn + 1.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedRow.ClockInTime">
            <summary>
            The clock in time to be considered for payroll and costing purposes as the time when the employee starts work. Clock in time is stored as Hours.Hundreths. It is created using the ActualClockIn value &amp; the Grace period allowed (JCSyst.Grace).  If the "ActualClockin" is before the shift start time (JCShift.Start) and after ( JCShift. start - JCSyst.Grace) then the system adjusts the clockin time to be the start of the shift. Else it will be set to the actual system time.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedRow.DspClockInTime">
            <summary>
            A "pre-formatted" ClockinTime field  used for displays purposes only.  If JCSyst.ClockFormat = "M" then output the clockin time as Hours:Minutes else output it as Hours.Hundreths. Note that the colon or  period  are physically part of the field.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedRow.ActualClockInTime">
            <summary>
            Actual clock in time. This time is NOT ADJUSTED, Labor collection uses the actual physical system time when the employee clocked in. In Labor Entry it would be entered from the TimeCard. Labor entry defaults it to the JCShift.StartTime. Stored as Hours:Hundreths.   
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedRow.ActualClockinDate">
            <summary>
            The actual date at the time of clockin. Labor Collection uses the system date to create this field.  Labor entry allows entry of this field and then uses it to generate the default for the adjusted  "ClockInDate".  This field is provided mainly for audit purposes.   
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedRow.LunchStatus">
             <summary>
             An internal control byte used by Labor Collection when the system is configured not to take out lunch automatically (JCSyst.AutoLunch = N). It is used determine if what to do when the "Lunch" button is pressed.
            
            The possible values are "N" - No lunch, "O" - Out to Lunch, "R" - Returned from lunch.   
            
            
             </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedRow.ActLunchOutTime">
             <summary>
             Actual Clock out time for Lunch.  Stored as Hours.Hundreths.  If the system is configured to automatically take out the standard lunch time (JCSyst.AutoLunch = Yes) then use the JCShift.LunchStart as the default. Labor collection creates these during the clock In function. But may erase or adjust them if the employee clocks out before or during the lunch period.
            
            If JCsyst.AutoLunch = "NO"  then there is no default.
            
            Labor entry  validates that the LunchOut  -  LunchIn falls between the ClockIn and ClockOut times. 
            
            If the JCSyst.AutoLunch = "NO" then Labor Collection allows the Lunch Clock in/out function and captures the system time for LunchOut.  
             </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedRow.LunchOutTime">
             <summary>
             Clock out time for Lunch that is used for costing/payroll determination. It is created by adjusting the ActLunchOutTime. . The adjusted time is where the system time is rolled back to the JCShift.LunchStart time when the employee clocks out for lunch after it has started but before it ends.
            
            Stored as Hours.Hundreths. 
             </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedRow.ActLunchInTime">
             <summary>
             Actual Clock In  time from Lunch.  Stored as Hours.Hundreths.  If the system is configured to automatically take out the standard lunch time (JCSyst.AutoLunch = Yes) then use the JCShift.LunchEnd as the default. Labor collection creates these during the clock In function. But may erase or adjust them if the employee clocks out before or during the lunch period.
            
            If JCsyst.AutoLunch = "NO"  then there is no default.
            
            Labor entry  validates that the LunchOut  -  LunchIn falls between the ClockIn and ClockOut times. 
            
            If the JCSyst.AutoLunch = "NO" then Labor Collection allows the Lunch Clock in/out function and captures the system time.  
             </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedRow.LunchInTime">
             <summary>
             Clock In time from Lunch break that is used for costing/payroll determination. Created by adjusting the ActLunchInTime.
            The adjusted time is where the system time is rolled forward to the JCShift.LunchEnd time when the employee clocks in from lunch before the lunch period ends. 
            Stored as Hours.Hundreths. 
             </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedRow.ClockOutTime">
            <summary>
            The clockOut in time to be considered for payroll and costing purposes as the time when the employee stops work. ClockOut time is stored as Hours.Hundreths. It is defaulted using the ActualClockOut value &amp; the Grace period allowed (JCSyst.Grace).  If the "ActualClockOut" is after the shift end time (JCShift.End) and before ( JCShift.End + JC.Syst.Grace) then the system adjusts the ClockOut time to be the end of the shift. Else it will be set to the actual system time.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedRow.DspClockOutTime">
            <summary>
            A "pre-formatted" ClockOutTime field  used for displays purposes only.  If JCSyst.ClockFormat = "M" then output the clockin time as Hours:Minutes else output it as Hours.Hundreths. Note that the colon or  period  are physically part of the field.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedRow.ActualClockOutTime">
            <summary>
            Actual clock Out time. This time is NOT ADJUSTED, Labor collection uses the actual physical system time when the employee clocks out.  In Labor Entry it would be entered from the TimeCard. Labor entry defaults it to the JCShift.EndTime. Stored as Hours.Hundreths.   
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedRow.PayHours">
             <summary>
             Hours for payroll.  This is stored as Hours.Hundreths. For example 3 1/2 hours is stored as 3.5. This is calculated when the Start/Stop times are changed in labor entry. It can then be overridden.
            The Logic for calculating hours from clockin, clockout is:
            If ClockIn &gt; ClockOut Gross Hours = ( (ClockOut + 24.00) - ClockIn) else Gross Hours = ClockOut - ClockIn. 
            If LunchOut &gt; LunchIn Lunch Hours = ( (LunchIn +24) - LunchOut )
            else Lunch Hours = ( LunchIn - LunchOut ).
            PayHours = GRoss Hours - Lunch Hours. 
            Remember that the database clockin/clockout fields are stored as hours hundredths, while the entry widgets are either hours.hundreths or Hours:Minutes. So use the database fields in this calculation and there is no need to worry about conversions. 
               
             </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedRow.FeedPayroll">
            <summary>
            Flag that indicates this labor transaction is eligible for transfer to DCD payroll application. The default is set from JCSyst.FeedPayroll.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedRow.TransferredToPayroll">
            <summary>
            Indicates if this transaction has been transferred to payroll. This is updated via the Payroll function to transfer labor.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedRow.LaborCollection">
            <summary>
            An internal flag that indicates if this record was created by the Labor Collection system.  It does not have any specific purpose, but it would be nice to know in debugging situations.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedRow.TranSet">
            <summary>
            An optional field where the user enters a string of characters that would be used to associate multiple transactions as being part of a transaction set. TranSet will be used for data selection type functions.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedRow.ActiveTrans">
             <summary>
             Used by Labor collection to indicate that this LaborHed record is currently active. When the employee clocks out it is set to "No".
            
            If record is created by Labor Entry this value is "NO".
            
            This field is controlled by the programs and not directly updated by the user. It will be used to prevent clocking in twice, displaying which employees are clocked in and which ones have not clocked out. Labor entry can't access a record that is Open. 
             </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedRow.ChkLink">
             <summary>
             Encoded value PRChkDtl.HeadNum + PRChkDtl.LineNum.
            Used to relate the labor to the payroll check detail.
             </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedRow.BatchTotalHrsDisp">
            <summary>
            BatchTotalHrsDisp
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedRow.BatchHrsRemainDisp">
            <summary>
            BatchHrsRemainDisp
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedRow.BatchHrsRemainPctDisp">
            <summary>
            BatchHrsRemainPctDisp
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedRow.BatchSplitHrsMethod">
            <summary>
            BatchSplitHrsMethod
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedRow.BatchAssignTo">
            <summary>
            BatchAssignTo
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedRow.BatchComplete">
            <summary>
            BatchComplete
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedRow.BatchStartHrs">
            <summary>
            BatchStartHrs
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedRow.BatchEndHrs">
            <summary>
            BatchEndHrs
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedRow.BatchTotalHrs">
            <summary>
            BatchTotalHrs
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedRow.BatchHrsRemain">
            <summary>
            BatchHrsRemain
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedRow.BatchHrsRemainPct">
            <summary>
            BatchHrsRemainPct
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedRow.SysRevID">
            <summary>
            Revision identifier for this row. It is incremented upon each write.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedRow.SysRowID">
            <summary>
            Unique identifier for this row. The value is a GUID.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedRow.Imported">
            <summary>
            Imported
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedRow.ImportDate">
            <summary>
            ImportDate
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedRow.BatchMode">
            <summary>
            BatchMode
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedRow.HCMPayHoursCalcType">
            <summary>
            Indicates which type of Pay time calculation will be used when HCM Integration is on.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedRow.EmpBasicShift">
            <summary>
            Normal work shift from EmpBasic
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedRow.EmpBasicSupervisorID">
            <summary>
            The ID of the supervisor for the employee
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedRow.GetNewNoHdr">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedRow.HCMTotPayHours">
            <summary>
            HCM Integration, Display the Total of Pay Hours of the Labor Details.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedRow.ImagePath">
            <summary>
            Full Path of Employee PhotoFile
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedRow.LunchBreak">
            <summary>
            Indicates if a lunch break is part of the shift
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedRow.MES">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedRow.PayrollValuesForHCM">
            <summary>
            Temporal field that stores patch field value: HDR, DTL, NON
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedRow.TimeDisableDelete">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedRow.TimeDisableUpdate">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedRow.TotBurHrs">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedRow.TotLbrHrs">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedRow.WipPosted">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedRow.DspPayHours">
            <summary>
            For display purposes
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedRow.BitFlag">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedRow.EmployeeNumFirstName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedRow.EmployeeNumName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedRow.EmployeeNumLastName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedRow.HCMStatusStatus">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedRow.PRSystHCMEnabled">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedRow.ShiftDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedRow.RowMod">
            <summary>
            RowMod
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedRow.SpecifiedProperties">
            <summary>
            SpecifiedProperties
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.Company">
            <summary>
            Company Identifier.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.EmployeeNum">
             <summary>
             The number of the employee that performed the work. This field is duplicated from the LaborHed.EmployeeNum. It is here so that an index can be built and used when finding how many jobs are
            concurrently active for an employee in order to distribute the labor hours.  
             </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.LaborHedSeq">
            <summary>
            Used as the foreign key to the LaborHed record.   
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.LaborDtlSeq">
             <summary>
             An integer assigned by the system to uniquely identify the LaborDtl record. This integer is created by using the database sequence "LaborDtlSeq".
            
             </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.LaborType">
             <summary>
             Indicates the type of labor transaction. It can be "I" = Indirect, "P" - Production, "S" - Setup.
            This value controls what fields are displayed/prompted for. 
            "I" Indirect does not use JobNum, LotNum, SetupPctCmp, OprComplete, OpCode, LaborQty, ScrapQty, ScrapReasonCode, Rework, ReworkReasonCode.
            "S" Setup does not use IndirectCode.
            "P" Production does not use IndirectCode or SetupPctCmp,  
             </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.LaborTypePseudo">
             <summary>
             Correlates to LaborType.  Indicates the type of labor transaction, however "Production" LaborType can be broken out into "Project", "Production" or "Service".  Valid Values are "I" = Indirect, "P" - Production, "S" - Setup, "J" - Project, or "V" - Service.
            This value controls what fields are displayed/prompted for. 
            "I" Indirect does not use JobNum, LotNum, SetupPctCmp, OprComplete, OpCode, LaborQty, ScrapQty, ScrapReasonCode, Rework, ReworkReasonCode.
            "S" Setup does not use IndirectCode.
            "P" Production does not use IndirectCode or SetupPctCmp,  
             </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.ReWork">
            <summary>
            Logical flag that indicates if this is a Rework labor transaction. This MUST be NO for Indirect labor (LaborDtl.LaborType = I)  
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.ReworkReasonCode">
             <summary>
             The reason code that is used to link this transaction to a Reason master record, which indicates why this rework is occurring on this operation  and allows the system the ability to recap rework by a code for analysis purposes.
            This should only exist  when LaborDtl.Rework = Yes. 
             </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.JobNum">
            <summary>
            Job number to which this labor transaction applies. For Setup &amp; Production labor this is a mandatory entry.  The program will use the JobNum/LotNum to validate that a record exists in Jhead and that Jhead.JobClosed is false. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.AssemblySeq">
            <summary>
            The Assembly Sequence of the Job that the labor transaction applies to. This can be blank or must be valid in the JobAsmbl file. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.OprSeq">
             <summary>
             The sequence of the operation record within the specific Job/Assembly to which this labor transaction applies.
            For setup &amp; production entries this must be valid and must not be a subcontract operation (JobOper.SubContract = NO).
             </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.JCDept">
            <summary>
            The Department in which the work was done. Default is from WrkCenter.JCDEpt. This code is DIRECTLY ENTERED.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.ResourceGrpID">
             <summary>
             The Resource Group in which the labor was performed.  This code IS DIRECTLY entered in labor entry, instead of the finding it based on the description.  This is mandatory and must be valid in the Resource Group table.
            For production labor (LaborType = "S" or "P") the default is from the JobOper.PrimaryProdDtl JobOpDtl.ResourceGrpID.
            For indirect labor (LaborType = I) there is no default.  
             </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.OpCode">
            <summary>
            The operation Code for this labor transaction. Default from JobOper.OpCode. This field IS DIRECTLY ENTERED. This is a mandatory field for direct labor transactions.  
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.LaborHrs">
            <summary>
            Labor hours are used in calculating labor cost for a job. It is stored as hours-hundredths. It is calculated whenever the start/stop time is changed. It can then be overridden. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.BurdenHrs">
            <summary>
            Job Cost Burden hours. Calculated whenever the start/stop times are changed. Can then be overridden.  This is zero for indirect labor.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.LaborQty">
            <summary>
            The Total production quantity reported. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.ScrapQty">
            <summary>
            The reported scrap quantity. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.ScrapReasonCode">
             <summary>
             The reason code that is used to link this transaction to a Reason master record, which indicates why this scrap occurred and allows the system the ability to recap scrap by a code for analysis purposes.
            This should only exist  when ScrapQty Ne 0.00. 
             </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.SetupPctComplete">
            <summary>
            Indicates what percent of the setup is considered complete as of this labor transaction.  If LaborDtl.SetupPctCmp is &gt; JobOper.SetupPctCmp then let JobOper.SetupPctCmp = LaborDtl.SetupPctCmp.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.Complete">
            <summary>
            Indicates if this transaction "completes" either the setup or production for this operation.
              
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.IndirectCode">
            <summary>
            A code that links to the Indirect master record that describes the type of indirect labor for this transaction. This field IS DIRECTLY ENTERED, not via a description/selection list method.   This is only valid when LaborType = "I" and must then be valid. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.LaborNote">
            <summary>
            A short note that the user can make about the labor transaction. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.ExpenseCode">
            <summary>
            The expense code for this labor transaction. An expense code is a abbreviated method of indirectly assigning a G/L account for the labor expense. DEFAULTS: for direct labor;  use the JobHead.ExpenseCode if its non-blank,  else use the Employee.ExpenseCode.                                                                   For Indirect Labor use the Indirect.ExpenseCode if not blank, else use the employee.ExpenseCode.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.LaborCollection">
            <summary>
            An internal flag that indicates if this record was created by the Labor Collection system.  It does not have any specific purpose, but it would be nice to know in debugging situations.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.AppliedToSchedule">
            <summary>
            an internal flag which indicates if this labor transaction has updated the job schedule. This will be updated via a Schedule refresh process.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.ClockInMInute">
             <summary>
             Contains both the clock in date and time represented as the # of minutes from a base date. The date/time is stored in this format to allow an easier method for comparing time ranges. This will be utilized in labor collection logic when determining the # of jobs or # of employees to split labor and burden hours. This field is Not directly maintainable. It is just another representation of the ClockInDate and ClockInTime fields.
             
            
             </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.ClockOutMinute">
            <summary>
            Contains both the clock out date and time. See "ClockinMinute" for further explanation of clock in/out. When Labor Collection first creates this record it sets ClockOutMinute = ClockInMinute + 1440. Then later during the clockout process it gets updated to represent the clockout time. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.ClockInDate">
            <summary>
            The clock in date that corresponds to the clock in time field. Labor entry uses the LaborHed.ClockInDate as a default for the first LaborDtl record of the LaborHed and then will use the date from the Last LaborDtl record. Labor Collection creates this field based on an adjusted system date.  See LaborHed.ClockInDate field description on adjusting the date.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.ClockinTime">
             <summary>
             The adjusted ClockIn time for job costing. Labor Collection updates this with the adjusted time. (see LaborHed.ClockIn for explanation of adjusted time). Labor entry uses LaborHed.Clockin as a default for the first LaborDtl record of a LaborHed. Then use the ClockOut of the last LaborDtl record for this LaborHed. Do not allow the ClockIn Time to be &lt; the LaborHed.ClockIn time.  Stored as hours.hundreths. The clockin/clockout are used to calculate the LaborHours, BurdenHours.
            This field is Not directly maintainable. Instead the user enters the clockin time through a program defined fill-in widget which is formatted to conform to either Hours:Minutes or Hours.Hundreths based on the setting in JCSyst.TimeFormat. 
            The programs will handle the logic to convert "to" and "from" the fill-in widget.  
            
             </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.ClockOutTime">
             <summary>
             The adjusted Clock Out time for job costing.  Labor entry uses  the LaborHed.ClockOut as a default on the first LaborDtl transaction of a LaborHed record. Do not allow the ClockOut to go past the LaborHed.ClockOut.  See "Clockin" for further explanation of clock in/out.
            
            Labor Entry updates this field at the time of clocking out of a job with the adjusted time. (see LaborHed.ClockOut for description of adjusted time)
             </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.ActiveTrans">
             <summary>
             Used by Labor collection to indicate that this LaborDtl record is currently active. When the employee clocks out of the operation it is set to "No".
            
            If record is created by Labor Entry this value is "NO".
            
            This field is controlled by the programs and not directly updated by the user. It will be used to prevent clocking in twice to same operation, displaying which operations are currently active.....  
             </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.OverRidePayRate">
            <summary>
            User-defined rate.   The Manufacturing System provides entry/maintenance to this field in labor entry.  It is not referenced in any other part of the Manufacturing System.  Solely intended for use by programs the users may wish to develop.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.LaborRate">
            <summary>
            Labor rate used for this transaction. This is not maintainable or viewable from labor entry. It is captured from the EmpBasic.LaborRate at time of entry. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.BurdenRate">
            <summary>
            The burden rate for this transaction at the time the transaction was created. Capture the appropriate rate from the WrkCenter.ProdBurRate or WrkCenter.SetupBurRate. Note that these rates can be either a "flat" rate or a "percent' of labor rate.  This is not user maintainable or viewable by Labor Entry.  Always Zero for indirect labor transactions.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.DspClockInTime">
            <summary>
            A "pre-formatted" ClockinTime field  used for displays purposes only.  If JCSyst.ClockFormat = "M" then output the clockin time as Hours:Minutes else output it as Hours.Hundreths. Note that the colon or  period  are physically part of the field.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.DspClockOutTime">
            <summary>
            A "pre-formatted" ClockOutTime field  used for displays purposes only.  If JCSyst.ClockFormat = "M" then output the clockin time as Hours:Minutes else output it as Hours.Hundreths. Note that the colon or  period  are physically part of the field.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.ResourceID">
            <summary>
            The ID of the Resource that was used to do the work. This field will be used to run reports using LaborDtl records to show how much work has been done on a specific Resource. This ID is directly entered in labor entry and Labor collection. It is only prompted for if the JcSyst.MachinePrompt = Yes/
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.OpComplete">
             <summary>
             When displayed in Labor entry this field represents the current status of JobOper.OpComplete. It is used to directly toggle the operation from open to closed. The LaborDtl write trigger uses this to set JobOper.OpComplete.
            
               
             </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.EarnedHrs">
            <summary>
            The amount of hours that it should have taken (based on standard) to produce the reported LaborQty. For Setup labor the Earned hours is the lessor of (Est.Setup - ActSetUp) or LaborDtl.BurdenHrs. Rework labor always has zero Earned hrs. Earned hours for production labor is calculated as (JobOper.EstProdHours / JobOper.RunQty) * LaborDtl.LaborQty
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.AddedOper">
            <summary>
            This indicates if this labor transaction was against an "added operation" at the time it was created/updated. This field is a copy of the JobOPer.AddedOper. It is for internal use only. Used in the logic concerned with updating the ShopPerf summary file. This field prevents the summary from being corrupted if the user changes the JobOPer.AddedOper field after labor activity has occurred.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.PayrollDate">
            <summary>
            Not directly user maintainable. Duplicated from LaborHed.PayrollDate. Is used as one of the selection criteria of the labor edit report. See LaborHed.PayrollDate for further info.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.PostedToGL">
             <summary>
             Indicates if this labor/burden cost was posted to G/L WIP accounts.  Transactions are posted in summary form.
            Note: All GL related fields (Fiscalyear,FiscalPeriod,Account,etc.) are established during the Caputure WIP/COS process (JCP80-GN.W) 
             </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.FiscalYear">
             <summary>
             Fiscal year that entry was posted to in G/L.
            Note: applicable only when posted to G/L.
             </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.FiscalPeriod">
             <summary>
             Fiscal period that entry was posted to.
            Note: applicable only when posted to G/L.  
             </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.JournalNum">
             <summary>
             Journal # that entry was posted to.
            Note: applicable only when posted to G/L.
             </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.GLTrans">
            <summary>
            Internal flag to indicates if this is the type of transaction that would affect GL.  It is used to prevent certain transactions from posting to G/L.  Currently details created from Job Split do not affect GL and set this to NO.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.JournalCode">
            <summary>
            Journal Code of the related GLJrnDtl.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.InspectionPending">
            <summary>
            Indicates if the labordtl record inspection has completed.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.CallNum">
            <summary>
            The service call that this service record belongs to.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.CallLine">
            <summary>
            The line number of the service call this labor detail is for.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.ServNum">
            <summary>
            the service that is being performed on this line.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.ServCode">
            <summary>
            A unique code that identifies the Service
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.ResReasonCode">
            <summary>
            Problem reason code from the reason master table. type Service call. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.WipPosted">
             <summary>
             Indicates that record was processed by the Capture Wip/Cos program (JCP80-GN.W).  WipPosted records cannot be maintained through labor entry.
            
             </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.DiscrepQty">
            <summary>
            The Non-conformance (scrap) quantity reported in this field would go into Q/A for inspection.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.DiscrpRsnCode">
             <summary>
             The reason code that is used to link the transaction to the reason master record, which indicates why the Non-Conformance (discrepant) occurred and allows the system the ability to recap Non-Conformance (scrap) by a code for analysis purposes.
            
            This should only exist  when DiscrepQty Ne 0.00. 
             </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.ParentLaborDtlSeq">
            <summary>
            If this record was created through Back Flushing, then this field contains the LaborDtlSeq of the LaborDtl record which caused this record to be created.  The LaborDtl record wich caused the Back Flushing process to start and create other LaborDtl recods is the Parent and the LaborDtl records created by the Back Flushing process are the Children.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.LaborEntryMethod">
            <summary>
            Indicates the Method for Labor Entry.  Can be "T" - Time and Quantity, "Q" - Quantity Only (Time is estimated) or "B" - Backflush.  If "B" then the LaborNote will be "Backflushed".
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.FiscalYearSuffix">
            <summary>
            Fiscal year suffix.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.FiscalCalendarID">
            <summary>
            The fiscal calendar year/suffix/period were derived from.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.BFLaborReq">
            <summary>
            It indicates that the laborDtl record is pending labor for Backflush operations. It is cleared by Backflush Labor Server Process after processing the pending labor
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.ABTUID">
            <summary>
            Reference to the ABT, it is GUID,used in PostingEngine
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.ProjectID">
            <summary>
            Descriptive code assigned by the user to uniquely identify the Jobs, Orders, POs, and Tasks in a Project.  Cannot be blank. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.PhaseID">
            <summary>
            Project Phase ID
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.RoleCd">
            <summary>
            Project Role Code
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.TimeTypCd">
            <summary>
            Time Type Code
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.PBInvNum">
            <summary>
            The Project Billing Invoice Number where these charges were processed.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.PMUID">
            <summary>
            The payment method of the time.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.TaskSetID">
            <summary>
            Link to Task set
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.ApprovedDate">
            <summary>
            The date the time received final approval.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.ClaimRef">
            <summary>
            Brief description of the time.  Can be used to group time entries together, for example, all time entries incurred on the same trip can be assigned the same reference.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.QuickEntryCode">
            <summary>
            Quick entry code.  Reference to the QuickEntry table.  Can be used to default information into the time record.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.TimeStatus">
             <summary>
             The status of the time.  Values are:
            Blank
            E - Entered
            S - Submitted
            P - Partially Approved
            A - Approved
            R - Rejected
             </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.CreatedBy">
            <summary>
            Userid of the user who created the record.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.CreateDate">
            <summary>
            The date the record was created.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.CreateTime">
            <summary>
            The time the record was created (in seconds since midnight)
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.ChangedBy">
            <summary>
            Userid of the user who made the last change to this record.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.ChangeDate">
            <summary>
            The date the record was last changed.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.ChangeTime">
            <summary>
            The time the record was last changed (in seconds since midnight)
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.ActiveTaskID">
            <summary>
            The Currently active Stage changing task
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.LastTaskID">
            <summary>
            The Last Complete Milestone task
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.CreatedViaTEWeekView">
            <summary>
            For development use only.  This field indicates that this LaborDtl record was generated via the Weekly View tab of Time and Expense Entry, which is a way for the user to enter bulk data for hours within a week for the same task.  
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.CurrentWFStageID">
            <summary>
            The identifier of the workflow stage.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.WFGroupID">
            <summary>
            The identifier of the workflow group
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.WFComplete">
            <summary>
            This indicates if the workflow for this group is complete.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.ApprovalRequired">
            <summary>
            Indicates if approval is required for this transaction.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.SubmittedBy">
            <summary>
            The User ID of the submitter.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.PBRateFrom">
            <summary>
            Project Billing calculation in COSandWIP: where Rate is got from (EMPL=Employee, ROLE=Role, PROJ = Project) 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.PBCurrencyCode">
            <summary>
            Project Billing calculation in COSandWIP: Currency code is got from Project
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.PBHours">
            <summary>
            Project Billing calculation in COSandWIP: Hours used for charge
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.PBChargeRate">
            <summary>
            Project Billing calculation in COSandWIP: Rate is got according to the Project setup
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.PBChargeAmt">
            <summary>
            Project Billing calculation in COSandWIP: Charge amount (Rate * hours)
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.DocPBChargeRate">
            <summary>
            Project Billing calculation in COSandWIP: Rate is got according to the Project setup in the Project currency
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.Rpt1PBChargeRate">
            <summary>
            Project Billing calculation in COSandWIP: Rate is got according to the Project setup in the Reporting currency
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.Rpt2PBChargeRate">
            <summary>
            Project Billing calculation in COSandWIP: Rate is got according to the Project setup in the Reporting currency
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.Rpt3PBChargeRate">
            <summary>
            Project Billing calculation in COSandWIP: Rate is got according to the Project setup in the Reporting currency
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.DocPBChargeAmt">
            <summary>
            Project Billing calculation in COSandWIP: Charge amount (Rate * hours) in the Project currency
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.Rpt1PBChargeAmt">
            <summary>
            Project Billing calculation in COSandWIP: Charge amount (Rate * hours) in the Reporting currency
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.Rpt2PBChargeAmt">
            <summary>
            Project Billing calculation in COSandWIP: Charge amount (Rate * hours) in the Reporting currency
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.Rpt3PBChargeAmt">
            <summary>
            Project Billing calculation in COSandWIP: Charge amount (Rate * hours) in the Reporting currency
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.Shift">
            <summary>
            Indicates the shift in which the employee clocked in.  Default from the Employee master. Must be valid in the master table JCShift.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.ActID">
            <summary>
            Links to PActDtl.ActID
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.DtailID">
            <summary>
            System assigned unique id number for the detail. Links to PActDtl.DetailID
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.ProjProcessed">
            <summary>
            Logical field to indicate if this record has been read by project analysis process.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.AsOfDate">
            <summary>
            Used By Project Analysis Process.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.AsOfSeq">
            <summary>
            Used By Project Analysis Process.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.JDFInputFiles">
            <summary>
            JDFInputFiles
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.JDFNumberOfPages">
            <summary>
            JDFNumberOfPages
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.BatchWasSaved">
            <summary>
            BatchWasSaved
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.AssignToBatch">
            <summary>
            AssignToBatch
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.BatchComplete">
            <summary>
            BatchComplete
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.BatchRequestMove">
            <summary>
            BatchRequestMove
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.BatchPrint">
            <summary>
            BatchPrint
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.BatchLaborHrs">
            <summary>
            BatchLaborHrs
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.BatchPctOfTotHrs">
            <summary>
            BatchPctOfTotHrs
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.BatchQty">
            <summary>
            BatchQty
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.BatchTotalExpectedHrs">
            <summary>
            BatchTotalExpectedHrs
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.JDFOpCompleted">
            <summary>
            JDFOpCompleted
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.SysRevID">
            <summary>
            Revision identifier for this row. It is incremented upon each write.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.SysRowID">
            <summary>
            Unique identifier for this row. The value is a GUID.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.Downtime">
            <summary>
            Downtime
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.RefJobNum">
            <summary>
            RefJobNum
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.RefAssemblySeq">
            <summary>
            RefAssemblySeq
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.RefOprSeq">
            <summary>
            RefOprSeq
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.Imported">
            <summary>
            Imported
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.ImportDate">
            <summary>
            ImportDate
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.TimeAutoSubmit">
             <summary>
             If the Time Detail is submited when record is saved, defaulted from Plant Configuration Control;
            Enable for new records only
             </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.BatchMode">
            <summary>
            BatchMode
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.BillServiceRate">
            <summary>
            BillServiceRate
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.HCMPayHours">
            <summary>
            Pay Hours used for HCM
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.EpicorFSA">
            <summary>
            True if transaction is related to Epicor FSA
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.AllowDirLbr">
            <summary>
            Field that indicates how the EmpBasic.AllowDirLbr flag is set.  Used in UI for row rule.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.ApprovalPhaseDesc">
            <summary>
            Used by Time and Expense approval only, not done as a linked field so it won't impact performance in processes other than Approval.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.ApprovalPhaseID">
            <summary>
            Used by Time and Expense approval only, populated with the JobHead.PhaseID, not done as a linked field so it won't impact performance in processes other than Approval.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.ApprovalProjectDesc">
            <summary>
            Used by Time and Expense approval only, populated with the Project.Description for ApprovalProjectID, not done as a linked field so it won't impact performance in processes other than Approval.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.ApprovalProjectID">
            <summary>
            Used by Time and Expense approval only, populated with the JobHead.ProjectID, not done as a linked field so it won't impact performance in processes other than Approval.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.ApprovedBy">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.ApprvrHasOpenTask">
            <summary>
            Used in approval entry.  Indicates if the approver has an open task or not.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.BaseCurrCodeDesc">
            <summary>
            Company Base currency code description for display in LaborDtl grid.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.BurdenCost">
            <summary>
            calculated field: BurdenHrs * BurdenRate
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.CallCode">
            <summary>
            Is the Call Type created on ERP and mapped through System External Key table with Service Type in FSA, stored on FSAExtData db table.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.CapabilityDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.CapabilityID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.ChargeRate">
            <summary>
            Charge rate calculated for Time and Expense approval
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.ChargeRateSRC">
            <summary>
            Transalated text that indicates where the Charge Rate was derived from: Project, Employee, Role, Labor Rate
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.ChgRateCurrDesc">
            <summary>
            The currency code description for the laborDtl charge rate - displayed in labor approval labordtl grid
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.CompleteFlag">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.ContractCode">
            <summary>
            Contract Code created on ERP and processed by FSA, stored on FSAExtData db table.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.ContractNum">
            <summary>
            Contract created in ERP generated on FSA as Service Agreement, stored on FSAExtData db table.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.DiscrepUOM">
            <summary>
            Unit of Measure used for DiscrepQty
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.DisLaborType">
            <summary>
            Field that indicates if field DisLaborTypeshould be disabled.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.DisplayJob">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.DisPrjRoleCd">
            <summary>
            Field that indicates if field PrjRoleCd should be disabled.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.DisTimeTypCd">
            <summary>
            Field that indicates if field TimeTypCd should be disabled.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.DowntimeTotal">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.DspChangeTime">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.DspCreateTime">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.DspTotHours">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.DtClockIn">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.DtClockOut">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.EfficiencyPercentage">
            <summary>
            Shows the efficiency of the hours calculated by dividing the Earned Hours by the Burden Hours when the latter are greater than zero.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.EmployeeName">
            <summary>
            Labor Detail Employee Name
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.EnableComplete">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.EnableCopy">
            <summary>
            Indicates if the copy button is enabled
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.EnableDiscrepQty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.EnableInspection">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.EnableLaborQty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.EnableNextOprSeq">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.EnablePrintTagsList">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.EnableRecall">
            <summary>
            Indicates if the recall button is enabled
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.EnableRecallAprv">
            <summary>
            Indicates if recall is available for an approver
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.EnableRequestMove">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.EnableResourceGrpID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.EnableScrapQty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.EnableSN">
            <summary>
            Enable the SN Button?
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.EnableSubmit">
            <summary>
            Indicates if the submit button is enabled
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.EndActivity">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.EnteredOnCurPlant">
            <summary>
            To know if the LaborDtl was created on the current plant
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.FSAAction">
            <summary>
            Has the Transaction Type field set in FSA and is stored on FSAExtData db table.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.FSACallCode">
            <summary>
            Is the Call Type created on ERP and mapped through System External Key table with Service Type in FSA, stored on FSAExtData db table.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.FSAContractCode">
            <summary>
            Contract Code created on ERP and processed by FSA, stored on FSAExtData db table.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.FSAContractNum">
            <summary>
            Contract created in ERP generated on FSA as Service Agreement, stored on FSAExtData db table.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.FSAEmpID">
            <summary>
            Employee created in ERP and processed on FSA as Service Technician, stored on FSAExtData db table.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.FSAEquipmentInstallID">
            <summary>
            Resource ID for Equipment in FSAOffice ( this can be found in the Equipment information/Administrative tab in the Resource ID). Stored on FSAExtData db table.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.FSAEquipmentPartNum">
            <summary>
            Part created as equipment in ERP and Installed through FSA process, stored in FSAExtData.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.FSAServiceOrderNum">
            <summary>
            Service Order number generated on FSA, stored on FSAExtData db table.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.FSAServiceOrderResourceNum">
            <summary>
            Service Order Resource generated on FSA, stored on FSAExtData db table.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.FSAWarrantyCode">
            <summary>
            Warranty created in ERP and processed on FSA, stored on FSAExtData db table.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.FSComplete">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.GLTranAmt">
            <summary>
            GL Journal Source Transaction Amount
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.GLTranDate">
            <summary>
            GL Journal Source Transaction Date
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.HasAccessToRow">
            <summary>
            Indicates if the user has access to the row
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.HasComments">
            <summary>
            Indicates if the labor detail has comments
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.HH">
            <summary>
            To tell the bo that this transaction was being modified from HH.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.IntExternalKey">
            <summary>
            Unique identifier of related integration record.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.ISFixHourAndQtyOnly">
            <summary>
            Indicates if the job operation is marked as fixed hours and quantity only.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.JCSystReworkReasons">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.JCSystScrapReasons">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.JobOperComplete">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.JobType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.JobTypeCode">
            <summary>
            JobHead.Jobtype. Needed a different name since LaborDtl.JobType was used as a transalated value of JobHead.JobType
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.LaborCost">
            <summary>
            calculated field: LaborHrs * LaborRate
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.LaborUOM">
            <summary>
            Unit of Measure used for LaborQty
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.LbrDay">
            <summary>
            Text for the day of the week that corresponds to the LaborDtl.ClockInDate
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.LbrMonth">
            <summary>
            Text for the calendar month name that corresponds to the LaborDtl.ClockInDate
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.LbrWeek">
            <summary>
            Text to show the week date range (Sunday-Saturday) that corresponds to the LaborDtl.ClockInDate such as "5/2/2009 - 5/9/2009"
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.MES">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.MultipleEmployeesText">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.NewDifDateFlag">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.NewPrjRoleCd">
            <summary>
            field to designate a new Project Role Code ? used by Labor Transaction Project Role Code Maint
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.NewRoleCdDesc">
            <summary>
            Holds the description for NewPrjRoleCd
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.NextAssemblySeq">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.NextOperDesc">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.NextOprSeq">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.NextResourceDesc">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.NonConfProcessed">
            <summary>
            To evaluate if the NonComformance has been already processed in inspection and no changes can be applied on LaborDtl then.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.NotSubmitted">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.OkToChangeResourceGrpID">
            <summary>
            Holds user's answer to question: "Resource belongs to a different ResourceGroup.  ResourceGroup will be changed.  Do you wish to continue?"
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.PartDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.PartNum">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.PBAllowModify">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.PendingApprovalBy">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.PhaseJobNum">
            <summary>
            External field for the Job associated with the WBS Phase ID. The JobNum defaulted into this field will also be defaulted into LaborDtl.JobNum
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.PhaseOprSeq">
            <summary>
            External field for the Operation associated with the WBS Phase ID. The operation entered in this field will be defaulted into  LaborDtl.OprSeq
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.PrintNCTag">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.PrjUsedTran">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.ProdDesc">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.ProjPhaseID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.RequestMove">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.ResourceDesc">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.RoleCdDisplayAll">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.ScrapUOM">
            <summary>
            Unit of Measure used for ScrapQty.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.SentFromMES">
            <summary>
            Flag field to identify if the row is being sent from MES
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.StartActivity">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.TimeDisableDelete">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.TimeDisableUpdate">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.TreeNodeImageName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.UnapprovedFirstArt">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.WarrantyCode">
            <summary>
            Warranty linked to part and processed by FSA, stored on FSAExtData db table.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.WeekDisplayText">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.PCID">
            <summary>
            Package Control Identification Number
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.EnablePCID">
            <summary>
            EnablePCID
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.OutputBin">
            <summary>
            The output bin from the resource
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.OutputWarehouse">
            <summary>
            The output warehouse from the resource
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.EnableLot">
            <summary>
            Internal flag used for the row rules to control whether the Lot columns should be enabled.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.LotNum">
            <summary>
            Lot number that is to be added to the PCID
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.PrintPCIDContents">
            <summary>
            Flag to indicate that whether to print a PCID contents label for the entered PCID after the processing the reported quantity,
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.HasAttachments">
            <summary>
            Indicates if the labor detail has attachments
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.BitFlag">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.DiscrpRsnDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.EmpBasicLastName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.EmpBasicFirstName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.EmpBasicName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.ExpenseCodeDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.HCMIntregationHCMEnabled">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.HCMStatusStatus">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.IndirectDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.JCDeptDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.JobAsmblPartNum">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.JobAsmblDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.MachineDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.OpCodeOpDesc">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.OpDescOpDesc">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.PayMethodType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.PayMethodSummarizePerCustomer">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.PayMethodName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.PhaseIDDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.ProjectDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.ResourceGrpDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.ResReasonDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.ReWorkReasonDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.RoleCdRoleDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.ScrapReasonDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.ShiftDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.TimeTypCdDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.RowMod">
            <summary>
            RowMod
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlRow.SpecifiedProperties">
            <summary>
            SpecifiedProperties
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlAttchRow.Company">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlAttchRow.LaborHedSeq">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlAttchRow.LaborDtlSeq">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlAttchRow.DrawingSeq">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlAttchRow.XFileRefNum">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlAttchRow.SysRevID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlAttchRow.SysRowID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlAttchRow.ForeignSysRowID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlAttchRow.DrawDesc">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlAttchRow.FileName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlAttchRow.PDMDocID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlAttchRow.DocTypeID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlAttchRow.RowMod">
            <summary>
            RowMod
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlAttchRow.SpecifiedProperties">
            <summary>
            SpecifiedProperties
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlCommentRow.Company">
            <summary>
            Company Identifier.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlCommentRow.LaborHedSeq">
            <summary>
            The unique identifier of the Labor Header the comment relates to.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlCommentRow.LaborDtlSeq">
            <summary>
            An integer assigned by the system to uniquely identify the LaborDtl record. This integer is created by using the database sequence "LaborDtlSeq".
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlCommentRow.CommentNum">
            <summary>
            Internal identifier of the comment record.  Used in conjunction with EmpTimeNum to make the record unique.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlCommentRow.CommentType">
             <summary>
             The comment type of this record.  Values are:
            "SUB" Submit
            "APP" Approve
            "REJ" Reject
             </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlCommentRow.CommentText">
            <summary>
            The comment text.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlCommentRow.CreatedBy">
            <summary>
            Userid of the user who created the record.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlCommentRow.CreateDate">
            <summary>
            The date the record was created.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlCommentRow.CreateTime">
            <summary>
            The time the record was created (in seconds since midnight)
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlCommentRow.ChangedBy">
            <summary>
            Userid of the user who made the last change to this record.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlCommentRow.ChangeDate">
            <summary>
            The date the record was last changed.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlCommentRow.ChangeTime">
            <summary>
            The time the record was last changed (in seconds since midnight)
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlCommentRow.TaskSeqNum">
            <summary>
            The identifier of the Task record the comment is related to.  Can be zero, which indicates the comment is not related to a specific task.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlCommentRow.SysRevID">
            <summary>
            Revision identifier for this row. It is incremented upon each write.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlCommentRow.SysRowID">
            <summary>
            Unique identifier for this row. The value is a GUID.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlCommentRow.DspChangeTime">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlCommentRow.DspCreateTime">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlCommentRow.TreeNodeImageName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlCommentRow.IntExternalKey">
            <summary>
            Unique identifier of related integration record.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlCommentRow.BitFlag">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlCommentRow.RowMod">
            <summary>
            RowMod
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlCommentRow.SpecifiedProperties">
            <summary>
            SpecifiedProperties
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborEquipRow.Company">
            <summary>
            Company Identifier.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborEquipRow.LaborHedSeq">
            <summary>
            Used as the foreign key to the LaborHed record.   
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborEquipRow.LaborDtlSeq">
             <summary>
             An integer assigned by the system to uniquely identify the LaborDtl record. This integer is created by using the database sequence "LaborDtlSeq".
            
             </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborEquipRow.EquipID">
            <summary>
            Descriptive code assigned by the user to uniquely identify the Equipment. Cannot be blank.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborEquipRow.Hours">
            <summary>
            Hours that will be added to Equip.CurrentMeter.  Relevant only when the related Equip.LaborOpt = "Hrs"
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborEquipRow.Qty">
            <summary>
            Quantity that will be added to Equip.CurrentMeter.  Relevant only when the related Equip.LaborOpt = "Qty"
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborEquipRow.CurrentMeter">
            <summary>
            Current Meter reading which will update the Equip.CurrentMeter. Relevant only when the related Equip.LaborOpt = "Mtr"
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborEquipRow.SysRevID">
            <summary>
            Revision identifier for this row. It is incremented upon each write.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborEquipRow.SysRowID">
            <summary>
            Unique identifier for this row. The value is a GUID.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborEquipRow.BitFlag">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborEquipRow.EquipLaborMeterOpt">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborEquipRow.EquipDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborEquipRow.EquipMeterUOM">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborEquipRow.RowMod">
            <summary>
            RowMod
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborEquipRow.SpecifiedProperties">
            <summary>
            SpecifiedProperties
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborPartRow.Company">
            <summary>
            Company Identifier.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborPartRow.LaborHedSeq">
            <summary>
            Used as the foreign key to the LaborHed record.   
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborPartRow.LaborDtlSeq">
             <summary>
             An integer assigned by the system to uniquely identify the LaborDtl record. This integer is created by using the database sequence "LaborDtlSeq".
            
             </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborPartRow.PartNum">
             <summary>
             Part number of the manufactured item that the quantity is for. Must be defined on the Job in the JobPart table.
            
             </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborPartRow.PartQty">
             <summary>
             The number of individual parts completed on this labor transaction. Updates the JobPart.QtyCompleted.
            
             </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborPartRow.SysRevID">
            <summary>
            Revision identifier for this row. It is incremented upon each write.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborPartRow.SysRowID">
            <summary>
            Unique identifier for this row. The value is a GUID.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborPartRow.MESProcessing">
            <summary>
            UI Sets this to true when processing from MES Labor Entry.  The BL uses this to determine if PartWip/MtlQueue logic should be performed.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborPartRow.RequestMove">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborPartRow.PartUOM">
            <summary>
            Unit of Measure for the Part defined on the Operation
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborPartRow.PartDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborPartRow.RevisionNum">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborPartRow.BitFlag">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborPartRow.RowMod">
            <summary>
            RowMod
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborPartRow.SpecifiedProperties">
            <summary>
            SpecifiedProperties
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LbrScrapSerialNumbersRow.Company">
            <summary>
            Company
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LbrScrapSerialNumbersRow.LaborHedSeq">
            <summary>
            LaborHedSeq of the related LaborDtl
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LbrScrapSerialNumbersRow.LaborDtlSeq">
            <summary>
            LaborDtlSeq of the related LaborDtl
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LbrScrapSerialNumbersRow.SerialNumber">
            <summary>
            Serial Number
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LbrScrapSerialNumbersRow.PartNum">
            <summary>
            Part Number
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LbrScrapSerialNumbersRow.JobNum">
            <summary>
            Job Number
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LbrScrapSerialNumbersRow.AssemblySeq">
            <summary>
            AssemblySeq this scrap serial number is for
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LbrScrapSerialNumbersRow.OprSeq">
            <summary>
            OprSeq this scrap serial number is for
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LbrScrapSerialNumbersRow.EnableStatus">
            <summary>
            Indicates whether the Status field can be updated.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LbrScrapSerialNumbersRow.SNStatus">
            <summary>
            New status for the serial number. This field will require Code/Desc definition: REJECTED`Scrap INSPECTION`Nonconformance WIP`WIP
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LbrScrapSerialNumbersRow.SNStatusDesc">
            <summary>
            The SNStatus description ? set same as SerialNo.SNStatusTrans
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LbrScrapSerialNumbersRow.Selected">
            <summary>
            Serial Number Selected for process
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LbrScrapSerialNumbersRow.SysRowID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LbrScrapSerialNumbersRow.RowMod">
            <summary>
            RowMod
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LbrScrapSerialNumbersRow.SpecifiedProperties">
            <summary>
            SpecifiedProperties
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlGroupRow.Company">
            <summary>
            Company Identifier.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlGroupRow.EmployeeNum">
             <summary>
             The number of the employee that performed the work. This field is duplicated from the LaborHed.EmployeeNum. It is here so that an index can be built and used when finding how many jobs are
            
            concurrently active for an employee in order to distribute the labor hours.  
             </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlGroupRow.ClaimRef">
            <summary>
            Brief description of the expense.  Can be used to expenses together, for example, all expenses incurred on the same trip can be assigned the same reference.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlGroupRow.SysRevID">
            <summary>
            Revision identifier for this row. It is incremented upon each write.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlGroupRow.SysRowID">
            <summary>
            Unique identifier for this row. The value is a GUID.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlGroupRow.BitFlag">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlGroupRow.RowMod">
            <summary>
            RowMod
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborDtlGroupRow.SpecifiedProperties">
            <summary>
            SpecifiedProperties
            </summary>
        </member>
        <member name="P:Erp.Tablesets.SelectedSerialNumbersRow.Company">
            <summary>
            Company
            </summary>
        </member>
        <member name="P:Erp.Tablesets.SelectedSerialNumbersRow.SerialNumber">
            <summary>
            SerialNumber
            </summary>
        </member>
        <member name="P:Erp.Tablesets.SelectedSerialNumbersRow.Scrapped">
            <summary>
            Scrapped flag
            </summary>
        </member>
        <member name="P:Erp.Tablesets.SelectedSerialNumbersRow.ScrappedReasonCode">
            <summary>
            Scrapped reason code
            </summary>
        </member>
        <member name="P:Erp.Tablesets.SelectedSerialNumbersRow.Voided">
            <summary>
            Voided flag
            </summary>
        </member>
        <member name="P:Erp.Tablesets.SelectedSerialNumbersRow.Reference">
            <summary>
            Reference field
            </summary>
        </member>
        <member name="P:Erp.Tablesets.SelectedSerialNumbersRow.ReasonCodeType">
            <summary>
            Reason code type = s
            </summary>
        </member>
        <member name="P:Erp.Tablesets.SelectedSerialNumbersRow.ReasonCodeDesc">
            <summary>
            Reason code description
            </summary>
        </member>
        <member name="P:Erp.Tablesets.SelectedSerialNumbersRow.PartNum">
            <summary>
            PartNumber
            </summary>
        </member>
        <member name="P:Erp.Tablesets.SelectedSerialNumbersRow.SNPrefix">
            <summary>
            Serial number prefix
            </summary>
        </member>
        <member name="P:Erp.Tablesets.SelectedSerialNumbersRow.SNBaseNumber">
            <summary>
            Base number used to create the serial number
            </summary>
        </member>
        <member name="P:Erp.Tablesets.SelectedSerialNumbersRow.SourceRowID">
            <summary>
            RowID of the source record for this serial number
            </summary>
        </member>
        <member name="P:Erp.Tablesets.SelectedSerialNumbersRow.TransType">
            <summary>
            TransType of the record that created this serial number
            </summary>
        </member>
        <member name="P:Erp.Tablesets.SelectedSerialNumbersRow.PassedInspection">
            <summary>
            True if this serial numbered part passed inspection
            </summary>
        </member>
        <member name="P:Erp.Tablesets.SelectedSerialNumbersRow.Deselected">
            <summary>
            Used to flag previously selected serial numbers as deselected 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.SelectedSerialNumbersRow.KitWhseList">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.SelectedSerialNumbersRow.RawSerialNum">
            <summary>
            This will be the raw serial number as it was scanned or entered into the system. This would only differ from the SerialNumber field if a validate type mask was being used where characters were stripped (using ~ in the mask).
            </summary>
        </member>
        <member name="P:Erp.Tablesets.SelectedSerialNumbersRow.KBLbrAction">
            <summary>
            Action type field used for Kanban receipts to indicate if the new serial number status is Inventory, Scrapped or NonConf.  This requires Code/desc:  1 ` inventory 2 ` Scrapped 3 ` Nonconformance
            </summary>
        </member>
        <member name="P:Erp.Tablesets.SelectedSerialNumbersRow.KBLbrActionDesc">
            <summary>
            Description field for KBLbrAction ? holds the translated description for the KBLbrAction code for UI display and combo box.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.SelectedSerialNumbersRow.PreventDeselect">
            <summary>
            If true, then users can not deselect this serial number.  This is used by applications that allow maintenance to the Selected Serial Numbers after update.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.SelectedSerialNumbersRow.XRefPartNum">
            <summary>
            Used only by SN Assignment
            </summary>
        </member>
        <member name="P:Erp.Tablesets.SelectedSerialNumbersRow.XRefPartType">
            <summary>
            Used only by SN Assignment: C = Customer Part / I = Internal Part XRef
            </summary>
        </member>
        <member name="P:Erp.Tablesets.SelectedSerialNumbersRow.PreDeselected">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.SelectedSerialNumbersRow.poLinkValues">
            <summary>
            temporary field used to link the packout lines to ship detail lines
            </summary>
        </member>
        <member name="P:Erp.Tablesets.SelectedSerialNumbersRow.SNMask">
            <summary>
            The mask the was used to generate the serial number
            </summary>
        </member>
        <member name="P:Erp.Tablesets.SelectedSerialNumbersRow.NotSavedToDB">
            <summary>
            Flag to indicate that the SelectedSerialNumbers entry has not yet been saved to the DB for the related transaction. Used to keep track of which deselected serial numbers need to be passed to the transaction update logic.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.SelectedSerialNumbersRow.SysRowID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.SelectedSerialNumbersRow.RowMod">
            <summary>
            RowMod
            </summary>
        </member>
        <member name="P:Erp.Tablesets.SelectedSerialNumbersRow.SpecifiedProperties">
            <summary>
            SpecifiedProperties
            </summary>
        </member>
        <member name="P:Erp.Tablesets.SNFormatRow.Company">
            <summary>
            Company Identifier.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.SNFormatRow.Plant">
            <summary>
            Site Identifier. This field cannot be blank.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.SNFormatRow.PartNum">
            <summary>
            The PartNum field identifies the Part and is used in the primary key. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.SNFormatRow.NumberOfDigits">
            <summary>
            Number of digits in the serial number
            </summary>
        </member>
        <member name="P:Erp.Tablesets.SNFormatRow.SNMask">
            <summary>
            If the SNBaseDataType is Mask this is the Serial Mask ID assigned for format validation/generation. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.SNFormatRow.SNBaseDataType">
             <summary>
             Current setting for Data type of the Base Serial Number field to be used as new serial numbers are generated. Valid values; Character, Integer, Mask
            Code/desc required:
            CHARACTER`Alphanumeric
            INTEGER`NumericOnly
            MASK`Serial Mask
            This field should be flagged as Include = true in Object Designer.
            
             </summary>
        </member>
        <member name="P:Erp.Tablesets.SNFormatRow.SNFormat">
             <summary>
             Current setting for Format of the Base serial number that will be used as new serial numbers are generated. Expressed in progress syntax. Ex: X(30), 99999999 for Character or Integer, or as a Serial Mask defined in SerialMask table.
            This field should be flagged as ReadOnly and Include = true in Object Designer.
             </summary>
        </member>
        <member name="P:Erp.Tablesets.SNFormatRow.LeadingZeroes">
            <summary>
            Whether or not to have leading zeroes
            </summary>
        </member>
        <member name="P:Erp.Tablesets.SNFormatRow.SNPrefix">
             <summary>
             Current setting for the prefix that will be attached to all new Serial Numbers as they are generated for Character and Integer format types.
            This field should be flagged as Include = true in Object Designer.
             </summary>
        </member>
        <member name="P:Erp.Tablesets.SNFormatRow.SNMaskSuffix">
            <summary>
            A standard suffix that will be attached to all serial numbers generated for the PartSite currently used only by SNBaseStructure Mask types
            </summary>
        </member>
        <member name="P:Erp.Tablesets.SNFormatRow.SNMaskPrefix">
            <summary>
            The prefix that was used to construct the serial number currently used only by SNBaseStructure Mask types
            </summary>
        </member>
        <member name="P:Erp.Tablesets.SNFormatRow.SNLastUsedSeq">
            <summary>
            This is the last used serial sequence. It is used only for the Mask Generate type to determine the next logical serial number to generate for this part/Site. It can be altered by the user and several PartSites can have the same counter values defined, but
            </summary>
        </member>
        <member name="P:Erp.Tablesets.SNFormatRow.HasSerialNumbers">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.SNFormatRow.SysRowID">
            <summary>
            Unique identifier for this row. The value is a GUID.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.SNFormatRow.BitFlag">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.SNFormatRow.PartPricePerCode">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.SNFormatRow.PartTrackLots">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.SNFormatRow.PartTrackSerialNum">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.SNFormatRow.PartTrackDimension">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.SNFormatRow.PartSalesUM">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.SNFormatRow.PartIUM">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.SNFormatRow.PartSellingFactor">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.SNFormatRow.PartPartDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.SNFormatRow.SerialMaskMaskType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.SNFormatRow.SerialMaskMask">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.SNFormatRow.SerialMaskExample">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.SNFormatRow.SerialMaskDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.SNFormatRow.RowMod">
            <summary>
            RowMod
            </summary>
        </member>
        <member name="P:Erp.Tablesets.SNFormatRow.SpecifiedProperties">
            <summary>
            SpecifiedProperties
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWeeklyViewRow.Company">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWeeklyViewRow.EmployeeNum">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWeeklyViewRow.WeekBeginDate">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWeeklyViewRow.WeekEndDate">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWeeklyViewRow.QuickEntryCode">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWeeklyViewRow.WeekDisplayText">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWeeklyViewRow.LaborType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWeeklyViewRow.ProjectID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWeeklyViewRow.PhaseID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWeeklyViewRow.TimeTypCd">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWeeklyViewRow.JobNum">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWeeklyViewRow.AssemblySeq">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWeeklyViewRow.OprSeq">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWeeklyViewRow.RoleCd">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWeeklyViewRow.IndirectCode">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWeeklyViewRow.HoursSun">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWeeklyViewRow.HoursMon">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWeeklyViewRow.HoursTue">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWeeklyViewRow.HoursWed">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWeeklyViewRow.HoursThu">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWeeklyViewRow.HoursFri">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWeeklyViewRow.HoursSat">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWeeklyViewRow.TimeTypCdDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWeeklyViewRow.RoleCdDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWeeklyViewRow.IndirectCodeDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWeeklyViewRow.PhaseIDDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWeeklyViewRow.HoursTotal">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWeeklyViewRow.ExpenseCode">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWeeklyViewRow.Complete">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWeeklyViewRow.ResourceGrpID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWeeklyViewRow.ResourceID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWeeklyViewRow.OpCode">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWeeklyViewRow.OpComplete">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWeeklyViewRow.LaborEntryMethod">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWeeklyViewRow.LaborRate">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWeeklyViewRow.ResourceGrpIDDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWeeklyViewRow.JCDept">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWeeklyViewRow.TimeDisableUpdate">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWeeklyViewRow.ResourceIDDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWeeklyViewRow.ExpenseCodeDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWeeklyViewRow.LaborTypePseudo">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWeeklyViewRow.Shift">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWeeklyViewRow.ShiftDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWeeklyViewRow.MessageText">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWeeklyViewRow.NewRowType">
            <summary>
            Valid values are "A" for an Add of a new TimeWeeklyView row and "C" for a Copy of an existing TimeWeeklyView row.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWeeklyViewRow.DisPrjRoleCd">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWeeklyViewRow.DisTimeTypCd">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWeeklyViewRow.DisLaborType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWeeklyViewRow.EnableSubmit">
            <summary>
            Indicates if submit is available
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWeeklyViewRow.EnableCopy">
            <summary>
            Indicates if the copy function is available
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWeeklyViewRow.EnableRecall">
            <summary>
            Indicates if recall is available
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWeeklyViewRow.AllowDirLbr">
            <summary>
            Field that indicates how the EmpBasic.AllowDirLbr flag is set.  Used in UI for row rule.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWeeklyViewRow.TimeStatus">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWeeklyViewRow.ProjDesc">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWeeklyViewRow.WBSPhaseDesc">
            <summary>
            WBS Phase Project Description
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWeeklyViewRow.OperDesc">
            <summary>
            Operation Description
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWeeklyViewRow.ASMdesc">
            <summary>
            Job Assembly description
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWeeklyViewRow.TimeAutoSubmit">
             <summary>
             If the Time is submited when record is saved, defaulted from Plant Configuration Control;
            Enable for new records only
             </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWeeklyViewRow.DeleteRow">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWeeklyViewRow.HCMTotWeeklyPayHours">
            <summary>
            HCM Integration Total Weekly Pay Hours
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWeeklyViewRow.SysRowID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWeeklyViewRow.RowMod">
            <summary>
            RowMod
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWeeklyViewRow.SpecifiedProperties">
            <summary>
            SpecifiedProperties
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWorkHoursRow.Company">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWorkHoursRow.CalendarID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWorkHoursRow.WeekBeginDate">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWorkHoursRow.WeekEndDate">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWorkHoursRow.SunDisplayDate">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWorkHoursRow.MonDisplayDate">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWorkHoursRow.TueDisplayDate">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWorkHoursRow.WedDisplayDate">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWorkHoursRow.ThuDisplayDate">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWorkHoursRow.FriDisplayDate">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWorkHoursRow.SatDisplayDate">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWorkHoursRow.WeekDisplayText">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWorkHoursRow.SunWorkHours">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWorkHoursRow.MonWorkHours">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWorkHoursRow.TueWorkHours">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWorkHoursRow.WedWorkHours">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWorkHoursRow.ThuWorkHours">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWorkHoursRow.FriWorkHours">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWorkHoursRow.SatWorkHours">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWorkHoursRow.SunBookedHours">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWorkHoursRow.MonBookedHours">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWorkHoursRow.WedBookedHours">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWorkHoursRow.ThuBookedHours">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWorkHoursRow.FriBookedHours">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWorkHoursRow.SunDiffHours">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWorkHoursRow.MonDiffHours">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWorkHoursRow.SatBookedHours">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWorkHoursRow.TueBookedHours">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWorkHoursRow.TueDiffHours">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWorkHoursRow.WedDiffHours">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWorkHoursRow.ThuDiffHours">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWorkHoursRow.FriDiffHours">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWorkHoursRow.SatDiffHours">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWorkHoursRow.EmployeeNum">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWorkHoursRow.CalendarDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWorkHoursRow.TotalWorkHours">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWorkHoursRow.TotalBookedHours">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWorkHoursRow.TotalDiffHours">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWorkHoursRow.SysRowID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWorkHoursRow.RowMod">
            <summary>
            RowMod
            </summary>
        </member>
        <member name="P:Erp.Tablesets.TimeWorkHoursRow.SpecifiedProperties">
            <summary>
            SpecifiedProperties
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedListRow.Company">
            <summary>
            Company Identifier.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedListRow.EmployeeNum">
            <summary>
            The number of the employee that performed the work. This field is directly maintainable. A selection list is provided in labor entry to find the employee by name.  
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedListRow.LaborHedSeq">
             <summary>
             An integer assigned by the system to uniquely identify the LaborHed record. This integer is created by using the database sequence "LaborHedSeq".
            
             </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedListRow.PayrollDate">
             <summary>
             The Payroll date is the "Logical Day" that labor occurred. In most cases this is the same as the "Physical Day".  But when work is done before and after midnight then "Labor Collection" rolls the physical date forward or backward to create a Logical date. This date will be used to group transactions together by a logical date in order to calculate daily overtime during the transfer to payroll.
            It will also be used in the selection criteria logic during the transfer to payroll.  This is duplicated into each LaborDtl. 
             </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedListRow.Shift">
            <summary>
            Indicates the shift in which the employee clocked in.  Default from the Employee master. Must be valid in the master table JCShift.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedListRow.ClockInDate">
            <summary>
            The clock in date of the clock in time field. It is created using the ActualDate and may be rolled forward/backward if the clock in time is adjusted across midnight. For example, when an employee clocks in prior to midnight, but shift starts at midnight or later, this situation causes the default to be ActualDateIn + 1.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedListRow.ClockInTime">
            <summary>
            The clock in time to be considered for payroll and costing purposes as the time when the employee starts work. Clock in time is stored as Hours.Hundreths. It is created using the ActualClockIn value &amp; the Grace period allowed (JCSyst.Grace).  If the "ActualClockin" is before the shift start time (JCShift.Start) and after ( JCShift. start - JCSyst.Grace) then the system adjusts the clockin time to be the start of the shift. Else it will be set to the actual system time.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedListRow.DspClockInTime">
            <summary>
            A "pre-formatted" ClockinTime field  used for displays purposes only.  If JCSyst.ClockFormat = "M" then output the clockin time as Hours:Minutes else output it as Hours.Hundreths. Note that the colon or  period  are physically part of the field.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedListRow.ActualClockInTime">
            <summary>
            Actual clock in time. This time is NOT ADJUSTED, Labor collection uses the actual physical system time when the employee clocked in. In Labor Entry it would be entered from the TimeCard. Labor entry defaults it to the JCShift.StartTime. Stored as Hours:Hundreths.   
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedListRow.ActualClockinDate">
            <summary>
            The actual date at the time of clockin. Labor Collection uses the system date to create this field.  Labor entry allows entry of this field and then uses it to generate the default for the adjusted  "ClockInDate".  This field is provided mainly for audit purposes.   
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedListRow.LunchStatus">
             <summary>
             An internal control byte used by Labor Collection when the system is configured not to take out lunch automatically (JCSyst.AutoLunch = N). It is used determine if what to do when the "Lunch" button is pressed.
            
            The possible values are "N" - No lunch, "O" - Out to Lunch, "R" - Returned from lunch.   
            
            
             </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedListRow.ActLunchOutTime">
             <summary>
             Actual Clock out time for Lunch.  Stored as Hours.Hundreths.  If the system is configured to automatically take out the standard lunch time (JCSyst.AutoLunch = Yes) then use the JCShift.LunchStart as the default. Labor collection creates these during the clock In function. But may erase or adjust them if the employee clocks out before or during the lunch period.
            
            If JCsyst.AutoLunch = "NO"  then there is no default.
            
            Labor entry  validates that the LunchOut  -  LunchIn falls between the ClockIn and ClockOut times. 
            
            If the JCSyst.AutoLunch = "NO" then Labor Collection allows the Lunch Clock in/out function and captures the system time for LunchOut.  
             </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedListRow.LunchOutTime">
             <summary>
             Clock out time for Lunch that is used for costing/payroll determination. It is created by adjusting the ActLunchOutTime. . The adjusted time is where the system time is rolled back to the JCShift.LunchStart time when the employee clocks out for lunch after it has started but before it ends.
            
            Stored as Hours.Hundreths. 
             </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedListRow.ActLunchInTime">
             <summary>
             Actual Clock In  time from Lunch.  Stored as Hours.Hundreths.  If the system is configured to automatically take out the standard lunch time (JCSyst.AutoLunch = Yes) then use the JCShift.LunchEnd as the default. Labor collection creates these during the clock In function. But may erase or adjust them if the employee clocks out before or during the lunch period.
            
            If JCsyst.AutoLunch = "NO"  then there is no default.
            
            Labor entry  validates that the LunchOut  -  LunchIn falls between the ClockIn and ClockOut times. 
            
            If the JCSyst.AutoLunch = "NO" then Labor Collection allows the Lunch Clock in/out function and captures the system time.  
             </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedListRow.LunchInTime">
             <summary>
             Clock In time from Lunch break that is used for costing/payroll determination. Created by adjusting the ActLunchInTime.
            The adjusted time is where the system time is rolled forward to the JCShift.LunchEnd time when the employee clocks in from lunch before the lunch period ends. 
            Stored as Hours.Hundreths. 
             </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedListRow.ClockOutTime">
            <summary>
            The clockOut in time to be considered for payroll and costing purposes as the time when the employee stops work. ClockOut time is stored as Hours.Hundreths. It is defaulted using the ActualClockOut value &amp; the Grace period allowed (JCSyst.Grace).  If the "ActualClockOut" is after the shift end time (JCShift.End) and before ( JCShift.End + JC.Syst.Grace) then the system adjusts the ClockOut time to be the end of the shift. Else it will be set to the actual system time.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedListRow.DspClockOutTime">
            <summary>
            A "pre-formatted" ClockOutTime field  used for displays purposes only.  If JCSyst.ClockFormat = "M" then output the clockin time as Hours:Minutes else output it as Hours.Hundreths. Note that the colon or  period  are physically part of the field.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedListRow.ActualClockOutTime">
            <summary>
            Actual clock Out time. This time is NOT ADJUSTED, Labor collection uses the actual physical system time when the employee clocks out.  In Labor Entry it would be entered from the TimeCard. Labor entry defaults it to the JCShift.EndTime. Stored as Hours.Hundreths.   
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedListRow.PayHours">
             <summary>
             Hours for payroll.  This is stored as Hours.Hundreths. For example 3 1/2 hours is stored as 3.5. This is calculated when the Start/Stop times are changed in labor entry. It can then be overridden.
            The Logic for calculating hours from clockin, clockout is:
            If ClockIn &gt; ClockOut Gross Hours = ( (ClockOut + 24.00) - ClockIn) else Gross Hours = ClockOut - ClockIn. 
            If LunchOut &gt; LunchIn Lunch Hours = ( (LunchIn +24) - LunchOut )
            else Lunch Hours = ( LunchIn - LunchOut ).
            PayHours = GRoss Hours - Lunch Hours. 
            Remember that the database clockin/clockout fields are stored as hours hundredths, while the entry widgets are either hours.hundreths or Hours:Minutes. So use the database fields in this calculation and there is no need to worry about conversions. 
               
             </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedListRow.FeedPayroll">
            <summary>
            Flag that indicates this labor transaction is eligible for transfer to DCD payroll application. The default is set from JCSyst.FeedPayroll.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedListRow.TransferredToPayroll">
            <summary>
            Indicates if this transaction has been transferred to payroll. This is updated via the Payroll function to transfer labor.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedListRow.LaborCollection">
            <summary>
            An internal flag that indicates if this record was created by the Labor Collection system.  It does not have any specific purpose, but it would be nice to know in debugging situations.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedListRow.TranSet">
            <summary>
            An optional field where the user enters a string of characters that would be used to associate multiple transactions as being part of a transaction set. TranSet will be used for data selection type functions.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedListRow.ActiveTrans">
             <summary>
             Used by Labor collection to indicate that this LaborHed record is currently active. When the employee clocks out it is set to "No".
            
            If record is created by Labor Entry this value is "NO".
            
            This field is controlled by the programs and not directly updated by the user. It will be used to prevent clocking in twice, displaying which employees are clocked in and which ones have not clocked out. Labor entry can't access a record that is Open. 
             </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedListRow.ChkLink">
             <summary>
             Encoded value PRChkDtl.HeadNum + PRChkDtl.LineNum.
            Used to relate the labor to the payroll check detail.
             </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedListRow.SysRevID">
            <summary>
            Revision identifier for this row. It is incremented upon each write.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedListRow.SysRowID">
            <summary>
            Unique identifier for this row. The value is a GUID.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedListRow.TotLbrHrs">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedListRow.TotBurHrs">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedListRow.WipPosted">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedListRow.ImagePath">
            <summary>
            Full Path of Employee PhotoFile
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedListRow.LunchBreak">
            <summary>
            Indicates if a lunch break is part of the shift
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedListRow.EmpBasicShift">
            <summary>
            Normal work shift from EmpBasic
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedListRow.EmpBasicSupervisorID">
            <summary>
            The ID of the supervisor for the employee
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedListRow.DspPayHours">
            <summary>
            For display purposes
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedListRow.GetNewNoHdr">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedListRow.TimeDisableUpdate">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedListRow.TimeDisableDelete">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedListRow.MES">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedListRow.EmployeeNumLastName">
            <summary>
            Last name of employee 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedListRow.EmployeeNumName">
            <summary>
            This is the employee's full name. This is not directly maintainable. It is a concatenation of the FirstName + MiddleInitial + LastName fields. It exists so that it can be used in browses or where ever the complete name in a first, middle, last fashion is required. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedListRow.EmployeeNumFirstName">
            <summary>
            First name of employee.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedListRow.ShiftDescription">
            <summary>
            A concatenation of Start + End time. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedListRow.RowMod">
            <summary>
            RowMod
            </summary>
        </member>
        <member name="P:Erp.Tablesets.LaborHedListRow.SpecifiedProperties">
            <summary>
            SpecifiedProperties
            </summary>
        </member>
        <member name="P:Erp.Tablesets.SelectSerialNumbersParamsRow.partNum">
            <summary>
            The part number to which the serial numbers have been assigned.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.SelectSerialNumbersParamsRow.quantity">
            <summary>
            The quantity of serial numbers that need to be selected.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.SelectSerialNumbersParamsRow.whereClause">
            <summary>
            whereClause for filtering available serial numbers
            </summary>
        </member>
        <member name="P:Erp.Tablesets.SelectSerialNumbersParamsRow.transType">
            <summary>
            transType of this transaction
            </summary>
        </member>
        <member name="P:Erp.Tablesets.SelectSerialNumbersParamsRow.sourceRowID">
            <summary>
            Include when filtering a set of SN's for BL processing is necessary.  It may be null if not needed.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.SelectSerialNumbersParamsRow.enableCreate">
            <summary>
            Determines if serial numbers can be created.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.SelectSerialNumbersParamsRow.enableSelect">
            <summary>
            Determines if serial numbers can be selected.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.SelectSerialNumbersParamsRow.enableRetrieve">
            <summary>
            Determines if serial numbers can be retrieved.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.SelectSerialNumbersParamsRow.allowVoided">
            <summary>
            Specifies whether Voided serial numbers can be manually selected.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.SelectSerialNumbersParamsRow.plant">
            <summary>
            The Plant associated with this transaction
            </summary>
        </member>
        <member name="P:Erp.Tablesets.SelectSerialNumbersParamsRow.xrefPartNum">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.SelectSerialNumbersParamsRow.xrefPartType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.SelectSerialNumbersParamsRow.xrefCustNum">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.SelectSerialNumbersParamsRow.poLinkValues">
            <summary>
            temporary field used to link the packout lines to ship detail lines
            </summary>
        </member>
        <member name="P:Erp.Tablesets.SelectSerialNumbersParamsRow.SysRowID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.SelectSerialNumbersParamsRow.RowMod">
            <summary>
            RowMod
            </summary>
        </member>
        <member name="P:Erp.Tablesets.SelectSerialNumbersParamsRow.SpecifiedProperties">
            <summary>
            SpecifiedProperties
            </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.Company">
            <summary>
            Company Identifier.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.JCDept">
            <summary>
            The Key ID of the Home Department for this Resource Group.  This is a foreign key to the JCDept table. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.OpComplete">
             <summary>
             Indicates if this operation is completed. This is normally set to complete via labor entry transactions.   Not maintainable by Job Entry. It can't be reset to "No" if the JobHead.Complete = Yes.
            Labor entry setting logic is: If SetUpComplete = Yes and  EstProdHours = 0 or ProdComplete = Yes and EstSetHours = 0 or both ProdComplete = Yes and SetupComplete = Yes  then OpComplete = Yes.
            This field is also set by PO receipt entry "issue complete" for subcontract operations.
             </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.JobNum">
            <summary>
            Job Number
            </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.AssemblySeq">
            <summary>
            Assembly Sequence # that this Operation is associated with.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.OprSeq">
            <summary>
            A sequence number which uniquely identifies the operation record within the Job/lot/level. The sequence can be system generated or assigned by user. System generated numbers are determined by reading last JobOper for the job/lot/level and then figures out what the next number that is divisible by 10. If this number is within 3 of the last Number on file it will be bumped up another 10. This keeps a minimum of 2 available sequences between records. For example if last = 18 Next would be 30, If last = 17  next = 20. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.OprQty">
            <summary>
            The total operation quantity. This is a calculated field.  
            </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.OpCode">
            <summary>
            Operation Master Code - Links the JobOper  record with a OpMaster record.  Default is given from WrkCenter.OpCode.  Must be valid in the OpMaster file.
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.EstSetHours">
            <summary>
            Total estimated set up hours.  Calculated as EstSetHoursPerMch * Machines.  It is set to zero if operation qty is zero.  This is maintained via the JobOper write trigger.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.EstProdHours">
             <summary>
             The estimated Production run hours for internal operations (JobOper.Subcontract = No) . This is not directly maintainable. It exists so that it will be easier to display than always having to  recalculate it  when it is needed.  It is calculated using the ProdStandard, StdFormat, StdBasis, OpsPerPart, QtyPer, EstScrap and EstScrapType.
            FORMULAS:
            If StdFormat = "HR" then EstProdHours = ProdStandard. 
            If StdFormat = "PH" then (JobOper.RunQty / Std).
            If StdFormat = "PM" then (JobOper.RunQty / Std ) / 60.
            If StdFormat = "OH" then (JobOper.RunQty/OpsPerPart) / Std.
            If StdFormat = "OM" then ((JobOper.RunQty/OpsPerPart) / Std) / 60.
            If StdFormat = "HP" then (JobOPer.RunQty/Basis) X Std.
            If StdFormat = "MP" then ((JobOper.RunQty/Basis) X Std) / 60.   
             </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.ProdStandard">
             <summary>
             The production standard for the operation.  It can be expressed as Hours, Minutes per piece, Pieces per Time, Operations per Minute or Operations per hour. This along with the StdFormat, StdBasis, OpsPer and   fields are used to calculate the operations estimated production hours.  A value can be defaulted from the OpStd master.
            NOTE: The ProdStandard can only be zero if the EstSetHours are greater than zero.
             </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.SchedCode">
            <summary>
            Scheduling Code.  SchedCode references a record in the SchedPri table.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.SetupLoadHrs">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.StdFormat">
             <summary>
             Qualifier for the Production Standard field. This is used as a default to the qualifier field in operation details. The valid qualifiers are;
            "HP" - Hours/Piece, "MP" - minutes/piece, "PH" - pieces/hour,
            "PM" - Pieces/Minute, "OH" - Operations/Hour,
            "OM"  - Operations/minute, HR - Fixed Hours.   
             </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.StdBasis">
             <summary>
             A standard basis is to be used to with standards that are time per piece (HP &amp; MP). The basis is a Divisor. Valid codes are E-Eaches, C=100's, M=1000's, T=10,000.
            This field is used in the formula for calculating the estimated production hours. The operation quantity is divided by the basis value and then multiplied by the standard to result in hours.    
             </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.ProdLoadHrs">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.RegionCode">
            <summary>
            1=CurrentWork, 2=AvailableWork, 3=ExpectedWork
            </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.OpsPerPart">
            <summary>
            Number of operations per part. This is used in the calculation of the estimated production hours when the StdFormat is "OM" or "OH".  This should not be accessible if StdFormat is not "OM" or "OH".  It MUST BE &gt; 0 if StdFormat is "OM" or "OH".
            </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.StartDate">
            <summary>
            Scheduled production start date. Not directly maintainable, updated via the scheduling process.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.StartHour">
            <summary>
            This field is established by scheduling. It represents the "Hour offset from the beginning of the work day" when this operation is scheduled to begin. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.DueDate">
            <summary>
            Scheduled production due date. Not directly maintainable, updated via the scheduling process.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.DueHour">
            <summary>
            This field is established by scheduling. It represents the "Hour offset from the beginning of the work day" when this operation is scheduled to end.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.SortDate">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.WIPQty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.CrewCount">
            <summary>
            Number Of Employees Now Working On This Operation
            </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.QtyLeft">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.SetupLeft">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.WIPQtyDetails">
            <summary>
            TRUE indicates there are WIP Qty Details available (i.e. the Staged Details button should be enabled)
            </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.Machines">
            <summary>
            Defaulted from the WrkCenter.SchMachines field. This is the number of machines that this operation will run on at the same time. Logically thought of as a "Squeeze factor" to scheduling. That is the more machines, the shorter the schedule. This affects how much of the total daily workcenter capacity that the operation will consume. For example; Center has 4 machines, 8 Hours per day and operation 2 machines. This operation would consume 16 hours of capacity per day. So if it had 32 hours of estimated production it would schedule as taking 2 days. NOTE THIS ONLY APPLIES TO PRODUCTION HOURS, TOTAL SETUP HOURS ARE ADDED TO THE SQUEEZED PRODUCTION HOURS TO GET THE NUMBER OF HOURS TO BE SCHEDULED. It is however used to calculate the total setup hours on the operation. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.CanRequest">
            <summary>
            TRUE indicates the current employee is authorized to Request Material
            </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.CanSelect">
            <summary>
            TRUE indicates the current employee can select this operation to work on (i.e. the Select For Work button should be enabled).
            </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.SetUpCrewSize">
            <summary>
            Defaulted from the WrkCenter.SetUpCrewSize field. Its the number of people it physically takes to setup this operation. It is used as a  multiplier in the estimated labor hours calculation.  JobOper.EstSetHours * JobOper.SetUpCrewSize = Estimated Labor hours for the operation. This also affects the estimated labor cost. Est Cost = Est Labor Hours * SetUpLaborRate
            </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.JobHeadPartNum">
            <summary>
            Part number of the manufactured item.  
            </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.ProdCrewSize">
            <summary>
            Defaults from the WrkCenter.ProdCrewSize. The # of people it physically takes to perform the production on this operation per machine that it is run on.  CrewSize * JobOper.EstProdHours = Est. Prod. Labor Hours. Note this can be a fraction for operations that do not require full time attention of an employee. See also SetUpCrewSize
            </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.JobHeadPartDescription">
            <summary>
            The description of the part that is to be manufactured.  
            </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.QtyCompleted">
             <summary>
             For Non Subcontract operations: A summary of labor transaction detail. (LaborDtl.LaborQty). Labor entry/collection maintains this field.  Only the LaborQty for transactions that are Production labor ( LaborType = P ) and Not rework (LaborDtl.Rework = No) are included in this summary.
            This quantity is used to reduce shop load when the system is configured to reduce load based on quantity completed. (JCSyst.RemoveLoad = Q)
            For Subcontract Operations this field is updated by the Purchased Receipt process. The detail records are in the PartTran file.
             </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.OprCommentText">
            <summary>
            Editor widget for Job operation comments. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.AsmCommentText">
            <summary>
            Editor widget for Job header comments. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.JobHeadCommentText">
            <summary>
            Editor widget for Job header comments. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.SubContract">
            <summary>
            This flags the operation as being a "SubContract" or an "Internal" operation.  This also controls what fields are allowed to be updated for this record. For example,  an internal operation will not have a PartNum.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.RegionDescription">
            <summary>
            "Current Work", "Available Work", or "Expected Work" as indicated by the RegionCode.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.OpDtlSeq">
            <summary>
            Uniquely identifies an OpDtl.  System assigned.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.OpDtlDescription">
            <summary>
            Description is initially created when the JobOpDtl is created.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.PartNum">
            <summary>
            The PartNum to be shipped to the subcontract. Default the JobHead.PartNum or JobAsmbl.PartNum depending on the JobMtl.AssemblySeq.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.OpDtlType">
            <summary>
            Identifies which part of the production, setup or production, the resource is required for.   Valid values are "Setup", "Production", or "Both".
            </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.Description">
            <summary>
            Description used only for subcontract operations
            </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.SortHour">
            <summary>
            This field is established by scheduling. It represents the "Hour offset from the beginning of the work day" when this operation is scheduled to begin. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.CommentText">
            <summary>
            Editor widget for Job operation comments. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.Selected">
            <summary>
            Used by the UI to allow selection of rows
            </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.RunQty">
             <summary>
             The total operation quantity. This is a calculated field.  Calculated as (Assembly Required Qty X QtyPer) + Scrap. The assembly qty is either the JobHead.ProdQty if  JobOPer.AssemblySeq = 0 or (JobAsmbl.RequireQty - JobAsmbl.PullQty) if JobOPer.AssemblySeq &gt; 0.
            This value is refreshed when maintenance is performed on the operation record or an assemblies production qty is changed 
             </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.PartDescription">
            <summary>
            Description for PartNum
            </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.SchResourceList">
            <summary>
            Delimited list of resources oper is schedueld to
            </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.CurQty">
            <summary>
            Current Production Qty (for user reporting qty)
            </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.LaborQty">
            <summary>
            Qty currently being completed
            </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.ScrapQty">
            <summary>
            Scrap Qty currently being entered
            </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.DiscrepQty">
            <summary>
            Discrep Qty currently being entered
            </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.DiscrepRsnCode">
            <summary>
            Reason code for discrep qty currently being entered
            </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.ScrapRsnCode">
            <summary>
            Reason code for scrap currently being entered
            </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.ScrapRsnDesc">
            <summary>
            Description for ScrapRsnCode
            </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.DiscrepRsnDesc">
            <summary>
            Description for DescrepRsnCode
            </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.Complete">
            <summary>
            Operation complete
            </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.ResourceID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.LaborEntryMethod">
            <summary>
            Indicates the Method for Labor Entry.  Can be "T" - Time and Quantity, "Q" - Quantity Only (Time is estimated), "B" - Backflush or "X" - Time - Backflush Qty.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.FirstCustNum">
            <summary>
            CustNum from first order
            </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.FirstCustID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.FirstCustName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.FirstShipViaCode">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.FirstShipViaDesc">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.SetupGrpDesc">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.SetupGroup">
            <summary>
            Used to group operation to save on setups.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.SysRowID">
            <summary>
            Unique identifier for this row. The value is a GUID.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.RequestMove">
            <summary>
            RequestMove
            </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.ResourceGrpID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.SetupOrProd">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.StartDateNullCheck">
            <summary>
            Used to checks if the StartDate has a value or is null to later permit a Sorting of the records By the StartDate field , positioning the null values at the end.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.CheckBox01">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.CheckBox02">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.CheckBox03">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.CheckBox04">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.QtyPerCycle">
            <summary>
            Number of pieces created per cycle if Cycle/Minute or Cycle/Hour is selected
            </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.CheckBox05">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.Date01">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.Date02">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.Date03">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.Date04">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.Date05">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.Number01">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.Number02">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.Number03">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.Number04">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.Number05">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.ShortChar01">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.ShortChar02">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.ShortChar03">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.ShortChar04">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.ShortChar05">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.PageNum">
            <summary>
            Used for caching pagination in UI
            </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.TotalRecords">
            <summary>
            Used for caching pagination in UI
            </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.MorePages">
            <summary>
            Used for caching pagination in UI
            </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.LaborEntryMethodDesc">
            <summary>
            Indicates the Method for Labor Entry.  Can be "T" - Time and Quantity, "Q" - Quantity Only (Time is estimated) , "B" - Backflush or "X" - Time and Backflush Qty.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.EnableLaborQty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.EnableScrapQty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.EnableDiscrepQty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.ResourceGrpDesc">
            <summary>
            Resource Group Description.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.OpCodeOpDesc">
            <summary>
            Operation Code Description.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.LaborUOM">
            <summary>
            Unit of Measure used for editable quantity fields on the WorkQueue.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.RowMod">
            <summary>
            RowMod
            </summary>
        </member>
        <member name="P:Erp.Tablesets.WorkQueueRow.SpecifiedProperties">
            <summary>
            SpecifiedProperties
            </summary>
        </member>
        <member name="P:Erp.Tablesets.PartWipOpRow.Company">
            <summary>
            Company Identifier.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.PartWipOpRow.Plant">
            <summary>
            Site Identifier. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.PartWipOpRow.PartNum">
            <summary>
            Part Number of item in the container.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.PartWipOpRow.JobNum">
            <summary>
            Job Number that the part allocated to.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.PartWipOpRow.AssemblySeq">
            <summary>
            Assembly Sequence that part is allocated to. Note: As quantity is reported against an operation, it is allocated to the "Next" operation sequence which may be on the next assembly sequence.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.PartWipOpRow.OprSeq">
            <summary>
            job operation sequence number that part is allocated to. Note: As quantity is reported against an operation, it is allocated to the "Next" operation sequence.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.PartWipOpRow.MtlSeq">
            <summary>
            The MtlSeq of the related JobMtl record.  Pertains only to  Raw Materials (TrackType = "R")
            </summary>
        </member>
        <member name="P:Erp.Tablesets.PartWipOpRow.WareHouseCode">
             <summary>
             Warehouse Code of the warehouse where the container of parts are currently located.
            FYI: Reporting of production quantity initially sets this to the WrkCenter.OutPutWhse of the workcenter that created the parts.
             </summary>
        </member>
        <member name="P:Erp.Tablesets.PartWipOpRow.LotNum">
            <summary>
            Unique lot number for the parts.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.PartWipOpRow.DimCode">
            <summary>
            Unique dimension code for the parts.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.PartWipOpRow.BinNum">
             <summary>
             Warehouse Bin where the container is currently located.
            FYI: Reporting of production quantity initially sets this to the WrkCenter.OutPutBinNum of the workcenter that created the parts.
             </summary>
        </member>
        <member name="P:Erp.Tablesets.PartWipOpRow.TrackType">
             <summary>
             Internal flag to distiguish between tracking of issued raw material, and the actual manufactured product.
            "R" - Raw Material a part which was issued to the job.
            "M" - Manufactured Part. The part that is being manufactured.
             </summary>
        </member>
        <member name="P:Erp.Tablesets.PartWipOpRow.ResourceGrpID">
            <summary>
            Resource Group of the related operation.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.PartWipOpRow.OpCode">
            <summary>
            Operation code of the related job operation.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.PartWipOpRow.RevisionNum">
            <summary>
            The revision number for the material.  An optional field. Defaults from the most current  PartRev.RevisionNum.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.PartWipOpRow.Quantity">
            <summary>
            Part Quantity balance for a  Job/Asm/Opr at a warehouse/bin location. 
            </summary>
        </member>
        <member name="P:Erp.Tablesets.PartWipOpRow.UM">
            <summary>
            Unit of Measure of items in the container.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.PartWipOpRow.FromAssemblySeq">
            <summary>
            Assembly Sequence # which created the parts allocated to this operation. Note, this only pertains to semi finished manufactured parts (TrackType = M)
            </summary>
        </member>
        <member name="P:Erp.Tablesets.PartWipOpRow.FromOprSeq">
            <summary>
            Operation Sequence # which created the parts allocated to this operation. Note, this only pertains to semi finished manufactured parts (TrackType = M)
            </summary>
        </member>
        <member name="P:Erp.Tablesets.PartWipOpRow.FromResourceGrpID">
            <summary>
            Resource Group which created the parts allocated to this operation.  This only pertains to semi-finished manufactured parts (TrackType = M)
            </summary>
        </member>
        <member name="P:Erp.Tablesets.PartWipOpRow.FromOpCode">
            <summary>
            Operation Code which created the parts allocated to this operation. Note, this only pertains to semi finished manufactured parts (TrackType = M)
            </summary>
        </member>
        <member name="P:Erp.Tablesets.PartWipOpRow.LastActivityDate">
            <summary>
            Last Activity Date.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.PartWipOpRow.LastActivityTime">
            <summary>
            Time of last activity expressed in seconds from midnight.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.PartWipOpRow.FinalOp">
            <summary>
            Indicates if the completed (OutPut) quantity is for the final operation.  It is used as a filter in Part Tracker to find completed quantities that have not been moved off the job.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.PartWipOpRow.DUM">
            <summary>
            Dimension unit of measure.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.PartWipOpRow.DimConvFactor">
             <summary>
             Dimension conversion factor.  This conversion factor is used to convert the qty to the base part unit of measure.
            Example: A half sheet to full sheet conversion factor would be 2 and a double sheet to full sheet conversion factor would be 0.5.
             </summary>
        </member>
        <member name="P:Erp.Tablesets.PartWipOpRow.UpdateStageQty">
            <summary>
            Used in the PartWip write trigger to control update to JobMtl.QtyStagedToDate field. Only transactions which  move the material in/out of the staging area update this field.  This field will contain the transaction type that moved the material. For example; STK-MTL(issue of stock), PUR-MTL( movement of purchased material), MTL-STK( Returns to stock).
            </summary>
        </member>
        <member name="P:Erp.Tablesets.PartWipOpRow.History">
            <summary>
            History
            </summary>
        </member>
        <member name="P:Erp.Tablesets.PartWipOpRow.SysRowID">
            <summary>
            Unique identifier for this row. The value is a GUID.
            </summary>
        </member>
        <member name="P:Erp.Tablesets.PartWipOpRow.TrackTypeDesc">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.PartWipOpRow.PartDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erp.Tablesets.PartWipOpRow.PageNum">
            <summary>
            Used for caching pagination in UI
            </summary>
        </member>
        <member name="P:Erp.Tablesets.PartWipOpRow.RowMod">
            <summary>
            RowMod
            </summary>
        </member>
        <member name="P:Erp.Tablesets.PartWipOpRow.SpecifiedProperties">
            <summary>
            SpecifiedProperties
            </summary>
        </member>
    </members>
</doc>
